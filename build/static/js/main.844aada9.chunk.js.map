{"version":3,"sources":["components/timer.js","components/swipescreen.js","tutorial-images/moon.jpg","tutorial-images/flag.jpg","tutorial-images/earthrise.jpg","tutorial-images/astronaut.jpg","components/tutorialscreen.js","components/endscreen.js","runner.js","reportWebVitals.js","index.js"],"names":["Timer","props","useState","time","setTime","setTimeout","useEffect","document","cookie","SwipeScreen","onSwipe","direction","setState","loading","onAcceptClick","onRejectClick","onSkipClick","onKeyPress","event","key","state","batchTotal","batch_size","decideCountText","bind","addEventListener","this","removeEventListener","y","imagesLeft","noOfSwipes","batchStop","some","toMatchItem","navigator","userAgent","match","detectMob","preventSwipe","src","image","alt","options","centerContent","defaultPositionX","count_text","x","obj","decideImgRender","Clipboard","console","log","className","labeledSize","total_batch_size","intent","onClick","onQuitClick","small","icon","iconSize","id","data-clipboard-target","data-clipboard-text","window","location","href","alert","value","type","disabled","undoHappened","onBackClick","React","Component","TutorialScreen","onTutorialKeyPress","onTutorialAcceptClick","onTutorialRejectClick","onTutorialSkipClick","prevLabel","tutorialIndex","tutorialImages","moon","earthrise","flag","tutorialMessages","title","caption","onTutorialSwipe","length","end","message","style","backgroundImage","EndScreen","decideContinue","fetch","method","headers","body","JSON","stringify","ready_to_end","decodeURIComponent","split","forEach","item","trim","startsWith","continue","text","reload","astronaut","getSwipeTime","sendEnd","App","view","index","imgUrls","undoUrls","swipes","leftBehind","fetchImage","sendSelection","endTutorial","setLoading","getBatchSize","performance","navigation","image_url","sessionStorage","getItem","curr_image_url","axios","post","then","res","catch","err","parseInt","getTotalBatchSize","setItem","get","data","batch_stop","labeled_size","url","pop","push","s","images","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.844aada9.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport default function Timer(props) {\n  const [time, setTime] = useState(1);\n  setTimeout(() => setTime(time + 1), 1000);\n\n  useEffect(() => {\n    return function ending() {\n      document.cookie = \"swipeTime=\" + time;\n    };\n  });\n\n  return (\n    <>\n      <strong>{time}</strong>\n    </>\n  );\n}\n","import React from 'react';\nimport '../styles.css';\nimport TinderCard from 'react-tinder-card';\nimport Timer from './timer';\nimport { Button, ProgressBar, Icon } from '@blueprintjs/core';\nimport 'normalize.css';\nimport '@blueprintjs/icons/lib/css/blueprint-icons.css';\nimport '@blueprintjs/core/lib/css/blueprint.css';\nimport { TransformWrapper, TransformComponent } from 'react-zoom-pan-pinch';\nimport Clipboard from 'clipboard';\n\nclass SwipeScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      batchTotal: this.props.batch_size,\n    };\n\n    //bind functions\n    this.decideCountText = this.decideCountText.bind(this);\n    this.onSwipe = this.onSwipe.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n  }\n\n  componentWillMount() {\n    document.addEventListener('keyup', this.onKeyPress, false);\n  }\n\n  componentWillUnmount() {\n    // Removes the key press event listener if this component is replaced by another component or view.\n    // (Currently there are no other components to replace this view, however.)\n    document.removeEventListener('keyup', this.onKeyPress);\n  }\n\n  onSwipe = (direction) => {\n    // From TinderCard\n    this.setState({\n      loading: true,\n    });\n    if (direction === 'right') {\n      this.props.onAcceptClick();\n    } else if (direction === 'left') {\n      this.props.onRejectClick();\n    } else if (direction === 'down') {\n      this.props.onSkipClick();\n    }\n  };\n\n  onKeyPress = (event) => {\n    // Key press alternatives\n    if (event.key === 'ArrowRight') {\n      this.props.onAcceptClick();\n    } else if (event.key === 'ArrowLeft') {\n      this.props.onRejectClick();\n    } else if (event.key === 'ArrowDown') {\n      this.props.onSkipClick();\n    }\n  };\n\n  decideCountText() {\n    //Helper function to render progress of correct width on the progress bar\n\n    let text = '';\n\n    let y;\n\n    y = this.props.imagesLeft;\n\n    if (this.props.imagesLeft > this.props.batch_size) {\n      y = this.props.batch_size;\n    }\n    if (y == 0) {\n      text = 'Last Image!';\n      return [text, this.props.noOfSwipes / this.props.batchStop];\n    }\n    if (y !== 1) text = y + ' Images Left!';\n    else text = y + ' Image Left!';\n    return [text, this.props.noOfSwipes / this.props.batchStop];\n  }\n\n  detectMob() {\n    // helper function to check type of device(mobile/desktop)\n    const toMatch = [\n      /Android/i,\n      /webOS/i,\n      /iPhone/i,\n      /iPad/i,\n      /iPod/i,\n      /BlackBerry/i,\n      /Windows Phone/i,\n    ];\n\n    return toMatch.some((toMatchItem) => {\n      return navigator.userAgent.match(toMatchItem);\n    });\n  }\n\n  decideImgRender() {\n    let obj;\n    if (this.detectMob()) {\n      obj = (\n        <TinderCard\n          onSwipe={this.onSwipe}\n          preventSwipe={['right', 'left', 'down', 'up']}\n        >\n          <img src={this.props.image} alt='' />\n        </TinderCard>\n      );\n    } else {\n      obj = (\n        <TinderCard\n          onSwipe={this.onSwipe}\n          preventSwipe={['right', 'left', 'down', 'up']}\n        >\n          <TransformWrapper\n            options={{ centerContent: true }}\n            defaultPositionX={50}\n          >\n            <TransformComponent>\n              <img src={this.props.image} alt='' />\n            </TransformComponent>\n          </TransformWrapper>\n        </TinderCard>\n      );\n    }\n    return obj;\n  }\n\n  render() {\n    let [count_text, x] = this.decideCountText();\n    let obj = this.decideImgRender();\n    var clipboard = new Clipboard('.clipboard');\n    return (\n      <>\n        {console.log('swipscreen props= ', this.props)}\n        <div className='header'>\n          <div className='count'>\n            <div className='timer'>\n              <Timer />\n            </div>\n            <div className='ct-grp'>\n              <span>\n                Labeled {this.props.labeledSize} out of{' '}\n                {this.props.total_batch_size}\n              </span>\n              <br></br>\n              <span>{count_text}</span>\n              {console.log('x= ', x)}\n              <br></br>\n            </div>\n            <div className='button-grp'>\n              <Button\n                className='quit-button'\n                intent='danger'\n                onClick={this.props.onQuitClick}\n                small={true}\n              >\n                <Icon icon='cross' iconSize={20} intent='danger' />{' '}\n              </Button>\n              <Button\n                id='share-button'\n                className='clipboard'\n                data-clipboard-target='#blank'\n                data-clipboard-text={window.location.href}\n                intent='primary'\n                small={true}\n                onClick={() => alert('Link copied to clipboard!')}\n              >\n                <Icon icon='share' iconSize={20} />\n              </Button>\n            </div>\n          </div>\n        </div>\n        <div id='#SwipeScreen' className='Content'>\n          <div className='Image_wrapper'>\n            <div className='prog-bar'>\n              <ProgressBar intent='success' value={x}></ProgressBar>\n            </div>\n            {obj}\n          </div>\n          <div className='footer'>\n            <input type='text' id='blank' value={window.location.href} />\n            <Button\n              icon='small-cross'\n              className='AcceptRejectButton'\n              intent='primary'\n              onClick={this.props.onRejectClick}\n            >\n              Reject\n            </Button>\n            <Button\n              icon='remove'\n              className='AcceptRejectButton'\n              intent='danger'\n              onClick={this.props.onSkipClick}\n            >\n              Skip\n            </Button>\n            <Button\n              icon='tick'\n              className='AcceptRejectButton'\n              intent='success'\n              onClick={this.props.onAcceptClick}\n            >\n              Accept\n            </Button>\n            <Button\n              icon='undo'\n              disabled={this.props.undoHappened}\n              className='BackButton'\n              onClick={this.props.onBackClick}\n            >\n              Undo\n            </Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport { SwipeScreen };\n","export default __webpack_public_path__ + \"static/media/moon.8ddbc237.jpg\";","export default __webpack_public_path__ + \"static/media/flag.d9b1a692.jpg\";","export default __webpack_public_path__ + \"static/media/earthrise.38b5ac31.jpg\";","export default __webpack_public_path__ + \"static/media/astronaut.0005e707.jpg\";","import React, { useEffect } from \"react\";\nimport \"../styles.css\";\nimport moon from \"../tutorial-images/moon.jpg\";\nimport flag from \"../tutorial-images/flag.jpg\";\nimport earthrise from \"../tutorial-images/earthrise.jpg\";\nimport astronaut from \"../tutorial-images/astronaut.jpg\";\nimport TinderCard from \"react-tinder-card\";\nimport Timer from \"./timer\";\nimport { Button, ProgressBar } from \"@blueprintjs/core\";\nimport \"normalize.css\";\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\n\nclass TutorialScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      prevLabel: null,\n      tutorialIndex: 0,\n      tutorialImages: [moon, earthrise, flag],\n      tutorialMessages: [\n        {\n          title: \"Welcome to the Swipe Labeler tool.\",\n          caption:\n            'You can label images in three ways. First click \"Accept\", \"Reject\" or \"Skip\" to continue.',\n        },\n        { caption: \"Now try swiping the image left,right, or downwards!.\" },\n        {\n          caption:\n            \"Now try a keyboard shortcut. Press your arrow left key,arrow right key, or your arrow down key on your keybord.\",\n        },\n      ],\n    };\n\n    this.onTutorialAcceptClick = this.onTutorialAcceptClick.bind(this);\n    this.onTutorialRejectClick = this.onTutorialRejectClick.bind(this);\n    this.onTutorialSkipClick = this.onTutorialSkipClick.bind(this);\n    this.onTutorialSwipe = this.onTutorialSwipe.bind(this);\n    this.onTutorialKeyPress = this.onTutorialKeyPress.bind(this);\n  }\n\n  componentWillMount() {\n    // Listens for the keyboard key press events. (Uses \"keyup\" so the button is only pressed once per choice.)\n    document.addEventListener(\"keyup\", this.onTutorialKeyPress, false);\n  }\n\n  componentWillUnmount() {\n    // Removes the key press event listener if this component is replaced by another component or view.\n    // (Currently there are no other components to replace this view, however.)\n    document.removeEventListener(\"keyup\", this.onTutorialKeyPress);\n  }\n\n  onTutorialAcceptClick() {\n    // This and onTutorialRejectClick could be one just one function: onTutorialClick.\n    // Kept as separate function in case later want to add interaction based on user's choice.\n    if (this.state.tutorialIndex === this.state.tutorialImages.length - 1) {\n      this.props.end();\n    }\n    this.setState({\n      prevLabel: \"accept\",\n      tutorialIndex: this.state.tutorialIndex + 1,\n    });\n  }\n\n  onTutorialSkipClick() {\n    // This and onTutorialAcceptClick could be one just one function: onTutorialClick.\n    // Kept as separate function in case later want to add interaction based on user's choice.\n    if (this.state.tutorialIndex === this.state.tutorialImages.length - 1) {\n      this.props.end();\n    }\n    this.setState({\n      prevLabel: \"skip\",\n      tutorialIndex: this.state.tutorialIndex + 1,\n    });\n  }\n\n  onTutorialRejectClick() {\n    // This and onTutorialAcceptClick could be one just one function: onTutorialClick.\n    // Kept as separate function in case later want to add interaction based on user's choice.\n    if (this.state.tutorialIndex === this.state.tutorialImages.length - 1) {\n      this.props.end();\n    }\n    this.setState({\n      prevLabel: \"reject\",\n      tutorialIndex: this.state.tutorialIndex + 1,\n    });\n  }\n\n  onTutorialSwipe(direction) {\n    // From TinderCard\n    if (direction === \"right\") {\n      this.onTutorialAcceptClick();\n    } else if (direction === \"left\") {\n      this.onTutorialRejectClick();\n    } else if (direction === \"down\") {\n      this.onTutorialSkipClick();\n    }\n  }\n\n  onTutorialKeyPress = (event) => {\n    // Key press alternatives\n    if (event.key === \"ArrowRight\") {\n      this.onTutorialAcceptClick();\n    } else if (event.key === \"ArrowLeft\") {\n      this.onTutorialRejectClick();\n    } else if (event.key === \"ArrowDown\") {\n      this.onTutorialSkipClick();\n    }\n  };\n\n  render() {\n    var message = this.state.tutorialMessages[this.state.tutorialIndex];\n    return (\n      <div className=\"TutorialScreen\">\n        <div className=\"Question\">\n          <div className=\"Image_wrapper\">\n            <TinderCard\n              onSwipe={this.onTutorialSwipe}\n              preventSwipe={[\"right\", \"left\", \"down\"]}\n            >\n              <div\n                className=\"TutorialScreen_Question_Image\"\n                style={{\n                  backgroundImage:\n                    \"url('\" +\n                    this.state.tutorialImages[this.state.tutorialIndex] +\n                    \"')\",\n                }}\n              >\n                <div className=\"TutorialScreen_Question_Image_Text\">\n                  <div className=\"TutorialScreen_Question_Image_Text_Title\">\n                    {message.title}\n                  </div>\n                  <div className=\"TutorialScreen_Question_Image_Text_Caption\">\n                    {message.caption}\n                  </div>\n                </div>\n              </div>\n            </TinderCard>\n          </div>\n\n          <Button\n            icon=\"small-cross\"\n            className=\"AcceptRejectButton\"\n            intent=\"primary\"\n            onClick={this.onTutorialRejectClick}\n          >\n            Reject\n          </Button>\n\n          <Button\n            icon=\"remove\"\n            className=\"AcceptRejectButton\"\n            intent=\"danger\"\n            onClick={this.onTutorialSkipClick}\n          >\n            Skip\n          </Button>\n\n          <Button\n            icon=\"tick\"\n            className=\"AcceptRejectButton\"\n            intent=\"success\"\n            onClick={this.onTutorialAcceptClick}\n          >\n            Accept\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport { TutorialScreen };\n","import React from \"react\";\nimport \"../styles.css\";\nimport astronaut from \"../tutorial-images/astronaut.jpg\";\nimport { Button } from \"@blueprintjs/core\";\nimport Confetti from \"react-confetti\";\nimport \"normalize.css\";\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\n\nclass EndScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    //bind functions\n    this.decideContinue = this.decideContinue.bind(this);\n  }\n  sendEnd() {\n    // When the user clicks end,\n    // that choice gets sent to flask.\n    fetch(\"/end\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        ready_to_end: \"ready\",\n      }),\n    });\n  }\n\n  getSwipeTime() {\n    let time;\n    let decoded = decodeURIComponent(document.cookie);\n    decoded.split(\";\").forEach((item) => {\n      if (item.trim().startsWith(\"swipeTime\")) time = item.trim().split(\"=\")[1];\n    });\n\n    return time;\n  }\n\n  decideContinue() {\n    let obj;\n    if (this.props.continue)\n      obj = (\n        <Button\n          icon=\"label\"\n          className=\"EndScreenButton\"\n          intent=\"primary\"\n          text={true}\n          onClick={() => window.location.reload()}\n        >\n          Continue Labelling\n        </Button>\n      );\n    else obj = null;\n    return obj;\n  }\n\n  render() {\n    let obj = this.decideContinue();\n    return (\n      <>\n        <Confetti />\n        <div\n          className=\"EndScreen\"\n          style={{\n            backgroundImage: \"url('\" + astronaut + \"')\",\n          }}\n        >\n          <div className=\"EndScreen_Text\">Mission accomplished! Good job!</div>\n          <div className=\"EndScreen_Time_Text\">\n            Your labelling time: {this.getSwipeTime()} seconds...\n          </div>\n          <div className=\"endscreen-btn-grp\">\n            {obj}\n            <Button\n              icon=\"stop\"\n              className=\"EndScreenButton\"\n              intent=\"danger\"\n              onClick={this.sendEnd}\n            >\n              Close\n            </Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\nexport { EndScreen };\n","import React, { useEffect } from \"react\";\nimport \"./styles.css\";\nimport { Button } from \"@blueprintjs/core\";\nimport { SwipeScreen } from \"./components/swipescreen\";\nimport { TutorialScreen } from \"./components/tutorialscreen\";\nimport { EndScreen } from \"./components/endscreen\";\nimport \"normalize.css\";\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport axios from \"axios\";\n\nfunction hasSeenTutorial() {\n  // Checks for a cookie on the users computer that will tell the user has already done the tutorial.\n  return document.cookie\n    .split(\";\")\n    .some((item) => item.trim().startsWith(\"hasSeenTutorial=\"));\n}\n\nfunction setTutorialSeen() {\n  document.cookie = \"hasSeenTutorial=true\";\n}\n\nexport default class App extends React.Component {\n  // Main component\n  constructor(props) {\n    super(props);\n    this.state = {\n      view: hasSeenTutorial() ? \"active\" : \"tutorial\",\n      index: 0,\n      image: null,\n      total_batch_size: null,\n      batch_size: null,\n      imgUrls: [],\n      undoUrls: [],\n      undoHappened: true,\n      swipes: 0,\n      noOfSwipes: 0,\n      batchStop: 0,\n      leftBehind: 0,\n      labeledSize: 0,\n    };\n\n    // bind functions\n    this.fetchImage = this.fetchImage.bind(this);\n    this.sendSelection = this.sendSelection.bind(this);\n    this.onAcceptClick = this.onAcceptClick.bind(this);\n    this.onRejectClick = this.onRejectClick.bind(this);\n    this.onSkipClick = this.onSkipClick.bind(this);\n    this.onBackClick = this.onBackClick.bind(this);\n    this.onQuitClick = this.onQuitClick.bind(this);\n    this.endTutorial = this.endTutorial.bind(this);\n    this.setLoading = this.setLoading.bind(this);\n    this.getBatchSize = this.getBatchSize.bind(this);\n  }\n\n  componentDidMount() {\n    // When the app loads,get the batch size and 1 image url from flask.\n\n    //refresh handler - to copy the images back to unlabeled incase user hits refresh\n    if (window.performance) {\n      if (performance.navigation.type == 1) {\n        //Send the current image to unlabeled\n        // If undo stack has a url, send that as well to unlabeled\n        let image_url = sessionStorage.getItem(\"url\");\n        let curr_image_url = sessionStorage.getItem(\"undo-url\");\n        if (curr_image_url == image_url) {\n          curr_image_url = \"none\";\n        }\n        console.log(\"Image url: \", image_url);\n        console.log(\"Curr_Image url: \", curr_image_url);\n\n        axios\n          .post(\"/refresh\", {\n            image_url: image_url,\n            curr_image_url: curr_image_url,\n          })\n          .then((res) => {\n            console.log(res);\n          })\n          .catch((err) => console.log(\"ERROR: \", err));\n      }\n    }\n\n    let x = parseInt(sessionStorage.getItem(\"noOfSwipes\"));\n    if (!x) x = 0;\n    this.setState({\n      noOfSwipes: x,\n    });\n\n    this.getTotalBatchSize();\n    this.fetchImage();\n  }\n\n  componentDidUpdate() {\n    if (this.state.view === \"end\") {\n      //change session storage before moving to endscreen\n      console.log(\"reached end\");\n      sessionStorage.setItem(`noOfSwipes`, 0);\n    } else {\n      // load the current image onto session storage, to be moved later incase user hits refresh\n      sessionStorage.setItem(`undo-url`, this.state.curr_image_url);\n      sessionStorage.setItem(`url`, this.state.image);\n      sessionStorage.setItem(`noOfSwipes`, this.state.noOfSwipes);\n    }\n  }\n\n  getTotalBatchSize() {\n    axios\n      .get(\"/getsize\")\n      .then((res) => {\n        console.log(\"response = \", res.data.batch_size);\n        this.setState(\n          {\n            total_batch_size: res.data.batch_size,\n            batchStop: res.data.batch_stop,\n            imagesLeft: res.data.batch_stop - 1,\n          },\n          () => {\n            console.log(\"got total batch state as: \", this.state.batch_size);\n          }\n        );\n      })\n      .catch((err) => console.log(\"ERROR: \", err));\n  }\n\n  getBatchSize() {\n    axios\n      .get(\"/getsize\")\n      .then((res) => {\n        console.log(\"response = \", res.data.batch_size);\n        this.setState(\n          {\n            batch_size: res.data.batch_size,\n            labeledSize: res.data.labeled_size,\n          },\n          () => {\n            console.log(\"got total batch state as: \", this.state.batch_size);\n          }\n        );\n      })\n      .catch((err) => console.log(\"ERROR: \", err));\n  }\n\n  fetchImage() {\n    // Collect one image url from flask\n    let url;\n    if (this.state.leftBehind != 0) {\n      url = this.state.undoUrls.pop();\n      this.setState({\n        leftBehind: this.state.leftBehind - 1,\n      });\n    } else url = \"none\";\n    axios\n      .post(\"/image\", {\n        swipes: this.state.swipes + 1,\n        image_url: url || \"none\",\n      })\n      .then((res) => {\n        if (res.data.image === \"none\")\n          this.setState({\n            view: \"end\",\n          });\n        else {\n          let x = this.state.imgUrls;\n          //check if res.data.image is in x before pushing to x\n          x.push(res.data.image);\n          let url = this.state.imgUrls[this.state.index]\n            ? this.state.imgUrls[this.state.index]\n            : \"none\";\n          let s = this.state.noOfSwipes + this.state.leftBehind;\n          this.setState(\n            {\n              image: res.data.image,\n              imgUrls: x,\n              curr_image_url: url,\n              swipes: s,\n            },\n            () => {\n              console.log(\"img \", typeof this.state.image);\n              this.getBatchSize();\n            }\n          );\n        }\n      })\n      .catch((err) => console.log(\"ERROR: \", err));\n  }\n\n  setLoading(s) {\n    console.log(\"reached \");\n    this.setState({\n      loading: s,\n    });\n  }\n\n  sendSelection(value) {\n    // When the user swipes, clicks, or presses a choice (accept or reject),\n    // that choice gets sent to flask.\n    fetch(\"/submit\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        image_url: this.state.image,\n        value: value,\n      }),\n    });\n  }\n\n  onAcceptClick() {\n    // Send the positive label to flask, make call to /image to get the next image from flask\n    // and update the index so the next image will show.\n    this.setState(\n      {\n        index: this.state.index + 1,\n        noOfSwipes: this.state.noOfSwipes + 1,\n        swipes: this.state.noOfSwipes + this.state.leftBehind,\n        undoHappened: false,\n        imagesLeft: this.state.imagesLeft - 1,\n      },\n      () => {\n        this.sendSelection(1);\n        if (this.state.noOfSwipes === this.state.batchStop)\n          this.setState({\n            view: \"end\",\n          });\n        else this.fetchImage();\n      }\n    );\n  }\n\n  onSkipClick() {\n    // Send no label to flask, mark as ambigous with constant value 10\n    // and update the index so the next image will show.\n    this.setState(\n      {\n        index: this.state.index + 1,\n        noOfSwipes: this.state.noOfSwipes + 1,\n        swipes: this.state.noOfSwipes + this.state.leftBehind,\n        undoHappened: false,\n        imagesLeft: this.state.imagesLeft - 1,\n      },\n      () => {\n        this.sendSelection(2);\n        if (this.state.noOfSwipes === this.state.batchStop)\n          this.setState({\n            view: \"end\",\n          });\n        else this.fetchImage();\n      }\n    );\n  }\n\n  onRejectClick() {\n    // Send the negative label to flask,\n    // and update the index so the next image will show.\n    this.setState(\n      {\n        index: this.state.index + 1,\n        noOfSwipes: this.state.noOfSwipes + 1,\n        swipes: this.state.noOfSwipes + this.state.leftBehind,\n        undoHappened: false,\n        imagesLeft: this.state.imagesLeft - 1,\n      },\n      () => {\n        this.sendSelection(0);\n        if (this.state.noOfSwipes === this.state.batchStop)\n          this.setState({\n            view: \"end\",\n          });\n        else this.fetchImage();\n      }\n    );\n  }\n\n  onBackClick() {\n    // add the image which is going to be undone to url stack and request the same image from flask\n    let x = this.state.imgUrls;\n    let y = this.state.undoUrls;\n    x.push(this.state.imgUrls[this.state.index - 1]);\n    y.push(this.state.imgUrls[this.state.index]);\n    axios\n      .post(\"/undo\", {\n        image_url: this.state.imgUrls[this.state.index - 1],\n        curr_image_url: this.state.imgUrls[this.state.index],\n      })\n      .then((res) => {\n        console.log(res);\n        this.setState({\n          index: this.state.index + 1,\n          image: this.state.imgUrls[this.state.index - 1],\n          imgUrls: x,\n          undoUrls: y,\n          noOfSwipes: this.state.noOfSwipes - 1,\n          leftBehind: this.state.leftBehind + 1,\n          undoHappened: true,\n          imagesLeft: this.state.imagesLeft + 1,\n        });\n      })\n      .catch((err) => console.log(\"ERROR: \", err));\n  }\n\n  onQuitClick() {\n    //Send the current image to unlabeled\n    // If undo stack has a url, send that as well to unlabeled\n    let image_url, curr_image_url;\n    if (this.state.undoHappened && this.state.index) {\n      image_url = this.state.image;\n      curr_image_url = this.state.undoUrls[0];\n    } else {\n      image_url = this.state.curr_image_url;\n      curr_image_url = \"none\";\n    }\n\n    axios\n      .post(\"/quit\", {\n        image_url: image_url,\n        curr_image_url: curr_image_url,\n      })\n      .then((res) => {\n        console.log(res);\n        this.setState({\n          view: \"end\",\n        });\n      })\n      .catch((err) => console.log(\"ERROR: \", err));\n  }\n\n  endTutorial() {\n    this.setState({\n      view: \"active\",\n    });\n    // Set a cookie on the user's browser so they don't see the tutorial again.\n    setTutorialSeen();\n  }\n\n  render() {\n    var body = null;\n    {\n      console.log(\"Parent Props\\n\", this.state.images);\n    }\n\n    if (this.state.view === \"tutorial\")\n      body = <TutorialScreen end={this.endTutorial} />;\n    else if (this.state.view === \"active\")\n      body = this.state.image ? (\n        <SwipeScreen\n          index={this.state.index}\n          undoHappened={this.state.undoHappened}\n          total_batch_size={this.state.total_batch_size}\n          swipes={this.state.swipes}\n          batch_size={this.state.batch_size}\n          labeledSize={this.state.labeledSize}\n          image={this.state.image}\n          onAcceptClick={this.onAcceptClick}\n          onRejectClick={this.onRejectClick}\n          onSkipClick={this.onSkipClick}\n          onBackClick={this.onBackClick}\n          onQuitClick={this.onQuitClick}\n          time={this.state.time}\n          batchStop={this.state.batchStop}\n          noOfSwipes={this.state.noOfSwipes}\n          imagesLeft={this.state.imagesLeft}\n        />\n      ) : (\n        <Button loading={true} />\n      );\n    else if (this.state.view === \"end\") {\n      if (this.state.batch_size <= 0) body = <EndScreen />;\n      else body = <EndScreen continue={true} />;\n    }\n    return <div className=\"App\">{body}</div>;\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport App from './runner';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["tutorial-images/moon.jpg","tutorial-images/flag.jpg","tutorial-images/earthrise.jpg","tutorial-images/astronaut.jpg","App.js","reportWebVitals.js","index.js"],"names":["App","props","state","view","document","cookie","split","some","item","trim","startsWith","index","images","batch_size","fetchImages","bind","sendSelection","onAcceptClick","onRejectClick","endTutorial","prevProps","prevState","this","fetch","then","res","json","data","setState","length","value","method","headers","body","JSON","stringify","image_url","end","image","loading","className","React","Component","SwipeScreen","onSwipe","direction","onKeyPress","event","key","addEventListener","removeEventListener","preventSwipe","src","alt","icon","intent","onClick","TutorialScreen","onTutorialKeyPress","onTutorialAcceptClick","onTutorialRejectClick","prevLabel","tutorialIndex","tutorialImages","moon","earthrise","flag","tutorialMessages","title","caption","onTutorialSwipe","message","style","backgroundImage","EndScreen","ready_to_end","astronaut","sendEnd","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5fb0fcc5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/moon.8ddbc237.jpg\";","export default __webpack_public_path__ + \"static/media/flag.d9b1a692.jpg\";","export default __webpack_public_path__ + \"static/media/earthrise.38b5ac31.jpg\";","export default __webpack_public_path__ + \"static/media/astronaut.0005e707.jpg\";","import React from \"react\";\nimport \"./styles.css\";\nimport moon from \"./tutorial-images/moon.jpg\";\nimport flag from \"./tutorial-images/flag.jpg\";\nimport earthrise from \"./tutorial-images/earthrise.jpg\";\nimport astronaut from \"./tutorial-images/astronaut.jpg\";\nimport TinderCard from \"react-tinder-card\";\nimport { Button } from \"@blueprintjs/core\";\nimport \"normalize.css\";\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\n\nfunction hasSeenTutorial(){\n  // Checks for a cookie on the users computer that will tell the user has already done the tutorial.\n  return (document.cookie.split(';').some((item) => item.trim().startsWith('hasSeenTutorial=')));\n}\n\nfunction setTutorialSeen(){\n  document.cookie = 'hasSeenTutorial=true';\n}\n\nexport default class App extends React.Component {\n  // Main component\n  constructor(props) {\n    super(props);\n    this.state = {\n      view: hasSeenTutorial() ? 'active':'tutorial',\n      index: 0,\n      images: null,\n      batch_size: null,\n    };\n\n    // bind functions\n    this.fetchImages = this.fetchImages.bind(this);\n    this.sendSelection = this.sendSelection.bind(this);\n    this.onAcceptClick = this.onAcceptClick.bind(this);\n    this.onRejectClick = this.onRejectClick.bind(this);\n    this.endTutorial = this.endTutorial.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // When the index gets updated, show the next image.\n    if (\n      prevState.index !== this.state.index &&\n      this.state.index === this.state.batch_size\n    )\n      this.fetchImages();\n  }\n\n  componentDidMount() {\n    // When the app loads, get all the image urls from flask.\n    this.fetchImages();\n  }\n\n  fetchImages() {\n    // Collect the list of image urls to request one by one later.\n    fetch(\"/images\")\n      .then((res) => res.json())\n      .then((data) => {\n        this.setState({\n          images: data.images,\n          batch_size: data.images.length,\n          index: 0,\n        });\n        if (!data.images.length)\n          this.setState({\n            view: \"end\",\n          });\n      });\n  }\n\n  sendSelection(value) {\n    // When the user swipes, clicks, or presses a choice (accept or reject),\n    // that choice gets sent to flask.\n    fetch(\"/submit\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        image_url: this.state.images[this.state.index],\n        value: value,\n      }),\n    });\n  }\n\n  onAcceptClick() {\n    // Send the positive label to flask,\n    // and update the index so the next image will show.\n    this.sendSelection(1);\n    this.setState({\n      index: this.state.index + 1,\n    });\n  }\n\n  onRejectClick() {\n    // Send the negative label to flask,\n    // and update the index so the next image will show.\n    this.sendSelection(0);\n    this.setState({\n      index: this.state.index + 1,\n    });\n  }\n\n  endTutorial() {\n    this.setState({\n      view: \"active\",\n    });\n    // Set a cookie on the user's browser so they don't see the tutorial again.\n    setTutorialSeen();\n  }\n\n  render() {\n    var body = null;\n\n    if (this.state.view === \"tutorial\")\n      body = <TutorialScreen end={this.endTutorial} />;\n    else if (this.state.view === \"active\")\n      body = this.state.images ? (\n        <SwipeScreen\n          index={this.state.index}\n          image={this.state.images[this.state.index]}\n          onAcceptClick={this.onAcceptClick}\n          onRejectClick={this.onRejectClick}\n        />\n      ) : (\n        <Button loading={true} />\n      );\n    else if (this.state.view === \"end\") body = <EndScreen />;\n\n    return <div className=\"App\">{body}</div>;\n  }\n}\n\nclass SwipeScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    this.onSwipe = this.onSwipe.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n  }\n  componentWillMount() {\n    // Listens for the keyboard key press events. (Uses \"keyup\" so the button is only pressed once per choice.)\n    document.addEventListener(\"keyup\", this.onKeyPress, false);\n  }\n\n  componentWillUnmount() {\n    // Removes the key press event listener if this component is replaced by another component or view.\n    // (Currently there are no other components to replace this view, however.)\n    document.removeEventListener(\"keyup\", this.onKeyPress);\n  }\n\n  onSwipe = (direction) => {\n    // From TinderCard\n    if (direction === \"right\") {\n      this.props.onAcceptClick();\n    } else if (direction === \"left\") {\n      this.props.onRejectClick();\n    }\n  };\n\n  onKeyPress = (event) => {\n    // Key press alternatives\n    if (event.key === \"ArrowRight\") {\n      this.props.onAcceptClick();\n    } else if (event.key === \"ArrowLeft\") {\n      this.props.onRejectClick();\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"SwipeScreen\">\n        <div className=\"Question\">\n          <div className=\"Image_wrapper\">\n            <TinderCard onSwipe={this.onSwipe} preventSwipe={[\"right\", \"left\"]}>\n              <img src={this.props.image} alt=\"\" />\n            </TinderCard>\n          </div>\n\n          <Button\n            icon=\"small-cross\"\n            className=\"AcceptRejectButton\"\n            intent=\"primary\"\n            onClick={this.props.onRejectClick}\n          >\n            Reject\n          </Button>\n\n          <Button\n            icon=\"tick\"\n            className=\"AcceptRejectButton\"\n            intent=\"success\"\n            onClick={this.props.onAcceptClick}\n          >\n            Accept\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass TutorialScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      prevLabel: null,\n      tutorialIndex: 0,\n      tutorialImages: [moon, earthrise, flag],\n      tutorialMessages: [\n        {\n          title: \"Welcome to the Swipe Labeler tool.\",\n          caption:\n            'You can label images in three ways. First click \"Accept\" or \"Reject\" to continue.',\n        },\n        { caption: \"Now try swiping the image to the left or to the right.\" },\n        {\n          caption:\n            \"Now try a keyboard shortcut. Press your arrow left key or your arrow right key on your keyboard.\",\n        },\n      ],\n    };\n\n    this.onTutorialAcceptClick = this.onTutorialAcceptClick.bind(this);\n    this.onTutorialRejectClick = this.onTutorialRejectClick.bind(this);\n    this.onTutorialSwipe = this.onTutorialSwipe.bind(this);\n    this.onTutorialKeyPress = this.onTutorialKeyPress.bind(this);\n  }\n\n  componentWillMount() {\n    // Listens for the keyboard key press events. (Uses \"keyup\" so the button is only pressed once per choice.)\n    document.addEventListener(\"keyup\", this.onTutorialKeyPress, false);\n  }\n\n  componentWillUnmount() {\n    // Removes the key press event listener if this component is replaced by another component or view.\n    // (Currently there are no other components to replace this view, however.)\n    document.removeEventListener(\"keyup\", this.onTutorialKeyPress);\n  }\n\n  onTutorialAcceptClick() {\n    // This and onTutorialRejectClick could be one just one function: onTutorialClick.\n    // Kept as separate function in case later want to add interaction based on user's choice.\n    if (this.state.tutorialIndex === this.state.tutorialImages.length - 1) {\n      this.props.end();\n    }\n    this.setState({\n      prevLabel: \"accept\",\n      tutorialIndex: this.state.tutorialIndex + 1,\n    });\n  }\n\n  onTutorialRejectClick() {\n    // This and onTutorialAcceptClick could be one just one function: onTutorialClick.\n    // Kept as separate function in case later want to add interaction based on user's choice.\n    if (this.state.tutorialIndex === this.state.tutorialImages.length - 1) {\n      this.props.end();\n    }\n    this.setState({\n      prevLabel: \"reject\",\n      tutorialIndex: this.state.tutorialIndex + 1,\n    });\n  }\n\n  onTutorialSwipe(direction) {\n    // From TinderCard\n    if (direction === \"right\") {\n      this.onTutorialAcceptClick();\n    } else if (direction === \"left\") {\n      this.onTutorialRejectClick();\n    }\n  }\n\n  onTutorialKeyPress = (event) => {\n    // Key press alternatives\n    if (event.key === \"ArrowRight\") {\n      this.onTutorialAcceptClick();\n    } else if (event.key === \"ArrowLeft\") {\n      this.onTutorialRejectClick();\n    }\n  };\n\n  render() {\n    var message = this.state.tutorialMessages[this.state.tutorialIndex];\n    return (\n      <div className=\"TutorialScreen\">\n        <div className=\"Question\">\n          <div className=\"Image_wrapper\">\n            <TinderCard\n              onSwipe={this.onTutorialSwipe}\n              preventSwipe={[\"right\", \"left\"]}\n            >\n              <div\n                className=\"TutorialScreen_Question_Image\"\n                style={{\n                  backgroundImage:\n                    \"url('\" +\n                    this.state.tutorialImages[this.state.tutorialIndex] +\n                    \"')\",\n                }}\n              >\n                <div className=\"TutorialScreen_Question_Image_Text\">\n                  <div className=\"TutorialScreen_Question_Image_Text_Title\">\n                    {message.title}\n                  </div>\n                  <div className=\"TutorialScreen_Question_Image_Text_Caption\">\n                    {message.caption}\n                  </div>\n                  {/* {this.state.tutorialMessages[this.state.tutorialIndex]} */}\n                </div>\n              </div>\n            </TinderCard>\n          </div>\n\n          <Button\n            icon=\"small-cross\"\n            className=\"AcceptRejectButton\"\n            intent=\"primary\"\n            onClick={this.onTutorialRejectClick}\n          >\n            Reject\n          </Button>\n\n          <Button\n            icon=\"tick\"\n            className=\"AcceptRejectButton\"\n            intent=\"success\"\n            onClick={this.onTutorialAcceptClick}\n          >\n            Accept\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass EndScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  sendEnd() {\n    // When the user clicks end,\n    // that choice gets sent to flask.\n    fetch(\"/end\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        ready_to_end: \"ready\",\n      }),\n    });\n  }\n\n  render() {\n    return (\n      <div\n        className=\"EndScreen\"\n        style={{\n          backgroundImage: \"url('\" + astronaut + \"')\",\n        }}\n      >\n        <div className=\"EndScreen_Text\">\n          Mission accomplished! Good job! Click the button to start training the\n          model.\n        </div>\n        <Button\n          icon=\"tick\"\n          className=\"AcceptRejectButton\"\n          intent=\"success\"\n          onClick={this.sendEnd}\n        >\n          Train Model\n        </Button>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
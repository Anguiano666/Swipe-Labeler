{"version":3,"sources":["tutorial-images/moonlanding.jpg","App.js","reportWebVitals.js","index.js"],"names":["App","props","state","view","index","images","batch_size","fetchImages","bind","sendSelection","onAcceptClick","onRejectClick","endTutorial","prevProps","prevState","this","fetch","then","res","json","data","setState","length","value","method","headers","body","JSON","stringify","image_url","end","image","loading","className","React","Component","SwipeScreen","onSwipe","direction","onKeyPress","event","key","document","addEventListener","removeEventListener","preventSwipe","src","alt","icon","intent","onClick","TutorialScreen","prevLabel","tutorialIndex","acceptMessages","rejectMessages","onTutorialAcceptClick","onTutorialRejectClick","onTutorialSwipe","alert","moonlanding","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7eba155f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/moonlanding.816821ea.jpg\";","import React from \"react\";\nimport \"./styles.css\";\nimport moonlanding from \"./tutorial-images/moonlanding.jpg\";\nimport TinderCard from \"react-tinder-card\";\nimport { Button } from \"@blueprintjs/core\";\nimport \"normalize.css\";\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\n\nexport default class App extends React.Component {\n  // Main component\n  constructor(props) {\n    super(props);\n    this.state = {\n      view: \"tutorial\",\n      index: 0,\n      images: null,\n      batch_size: null,\n    };\n\n    // bind functions\n    this.fetchImages = this.fetchImages.bind(this);\n    this.sendSelection = this.sendSelection.bind(this);\n    this.onAcceptClick = this.onAcceptClick.bind(this);\n    this.onRejectClick = this.onRejectClick.bind(this);\n    this.endTutorial = this.endTutorial.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // When the index gets updated, show the next image.\n    if (\n      prevState.index !== this.state.index &&\n      this.state.index === this.state.batch_size\n    )\n      this.fetchImages();\n  }\n\n  componentDidMount() {\n    // When the app loads, get all the image urls from flask.\n    this.fetchImages();\n  }\n\n  fetchImages() {\n    // Collect the list of image urls to request one by one later.\n    fetch(\"/images\")\n      .then((res) => res.json())\n      .then((data) => {\n        this.setState({\n          images: data.images,\n          batch_size: data.images.length,\n        });\n      });\n  }\n\n  sendSelection(value) {\n    // When the user swipes, clicks, or presses a choice (accept or reject),\n    // that choice gets sent to flask.\n    fetch(\"/submit\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        image_url: this.state.images[this.state.index],\n        value: value,\n      }),\n    });\n  }\n\n  onAcceptClick() {\n    // Send the positive label to flask,\n    // and update the index so the next image will show.\n    this.sendSelection(1);\n    this.setState({\n      index: this.state.index + 1,\n    });\n  }\n\n  onRejectClick() {\n    // Send the negative label to flask,\n    // and update the index so the next image will show.\n    this.sendSelection(0);\n    this.setState({\n      index: this.state.index + 1,\n    });\n  }\n\n  endTutorial() {\n    this.setState({\n      view: \"active\",\n    });\n  }\n\n  render() {\n    var body = null;\n\n    if (this.state.view === \"tutorial\")\n      body = <TutorialScreen end={this.endTutorial} />;\n\n    else if (this.state.view === \"active\")\n      body = this.state.images ? (\n        <SwipeScreen\n          index={this.state.index}\n          image={this.state.images[this.state.index]}\n          onAcceptClick={this.onAcceptClick}\n          onRejectClick={this.onRejectClick}\n        />\n      ) : (\n        <Button loading={true} />\n      );\n\n    return <div className=\"App\">{body}</div>;\n  }\n}\n\nclass SwipeScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    this.onSwipe = this.onSwipe.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n  }\n  componentWillMount() {\n    // Listens for the keyboard key press events. (Uses \"keyup\" so the button is only pressed once per choice.)\n    document.addEventListener(\"keyup\", this.onKeyPress, false);\n  }\n\n  componentWillUnmount() {\n    // Removes the key press event listener if this component is replaced by another component or view.\n    // (Currently there are no other components to replace this view, however.)\n    document.removeEventListener(\"keyup\", this.onKeyPress);\n  }\n\n  onSwipe = (direction) => {\n    // From TinderCard\n    if (direction === \"right\") {\n      this.props.onAcceptClick();\n    } else if (direction === \"left\") {\n      this.props.onRejectClick();\n    }\n  }\n\n  onKeyPress = (event) => {\n    // Key press alternatives\n    if (event.key === \"ArrowRight\") {\n      this.props.onAcceptClick();\n    } else if (event.key === \"ArrowLeft\") {\n      this.props.onRejectClick();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"SwipeScreen\">\n        <div className=\"Question\">\n          <div className=\"Image_wrapper\">\n            <TinderCard onSwipe={this.onSwipe} preventSwipe={[\"right\", \"left\"]}>\n              <img src={this.props.image} alt=\"\" />\n            </TinderCard>\n          </div>\n\n          <Button\n            icon=\"small-cross\"\n            className=\"AcceptRejectButton\"\n            intent=\"primary\"\n            onClick={this.props.onRejectClick}\n          >\n            Reject\n          </Button>\n\n          <Button\n            icon=\"tick\"\n            className=\"AcceptRejectButton\"\n            intent=\"success\"\n            onClick={this.props.onAcceptClick}\n          >\n            Accept\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass TutorialScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      prevLabel: null,\n      tutorialIndex: 0,\n      acceptMessages:[\"Great! You believe in science.\"],\n      rejectMessages: [\"Oh! I see you're a conspiracy theorist.\"], \n    };\n\n    this.onTutorialAcceptClick = this.onTutorialAcceptClick.bind(this);\n    this.onTutorialRejectClick = this.onTutorialRejectClick.bind(this);\n    this.onTutorialSwipe = this.onTutorialSwipe.bind(this);\n  }\n\n  onTutorialAcceptClick() {\n    alert(this.state.acceptMessages[this.state.tutorialIndex])\n    this.setState({\n      prevLabel: \"accept\",\n      tutorialIndex: this.state.tutorialIndex + 1,\n    });\n  }\n\n  onTutorialRejectClick() {\n    this.setState({\n      prevLabel: \"reject\",\n      tutorialIndex: this.state.tutorialIndex + 1,\n    });\n  }\n\n  onTutorialSwipe(direction){\n    // From TinderCard\n    if (direction === \"right\") {\n      this.onTutorialAcceptClick();\n    } else if (direction === \"left\") {\n      this.onTutorialRejectClick();\n    }\n\n  }\n\n\n  render() {\n    return (\n      <div className=\"TutorialScreen\">\n        <div className=\"Question\">\n          <div className=\"Image_wrapper\">\n            <TinderCard\n              onSwipe={this.onTutorialSwipe}\n              preventSwipe={[\"right\", \"left\"]}\n            >\n              <img src={moonlanding} alt=\"\" />\n            </TinderCard>\n          </div>\n\n          <Button\n            icon=\"small-cross\"\n            className=\"AcceptRejectButton\"\n            intent=\"primary\"\n            onClick={this.onTutorialRejectClick}\n          >\n            Reject\n          </Button>\n\n          <Button\n            icon=\"tick\"\n            className=\"AcceptRejectButton\"\n            intent=\"success\"\n            onClick={this.onTutorialAcceptClick}\n          >\n            Accept\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
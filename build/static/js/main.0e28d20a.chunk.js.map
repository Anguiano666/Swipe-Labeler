{"version":3,"sources":["components/timer.js","components/swipescreen.js","tutorial-images/moon.jpg","tutorial-images/flag.jpg","tutorial-images/earthrise.jpg","tutorial-images/arrowright.gif","tutorial-images/arrowleft.gif","tutorial-images/arrowdown.gif","components/tutorialhelper.js","components/tutorialscreen.js","tutorial-images/astronaut.jpg","components/endscreen.js","runner.js","reportWebVitals.js","index.js"],"names":["Timer","props","useState","time","setTime","setTimeout","useEffect","document","cookie","SwipeScreen","onSwipe","direction","setState","loading","onAcceptClick","onRejectClick","onSkipClick","onKeyPress","event","key","state","batchTotal","batch_size","decideCountText","bind","addEventListener","this","removeEventListener","y","imagesLeft","console","log","window","navigator","maxTouchPoints","msMaxTouchPoints","some","toMatchItem","userAgent","match","detectTouch","detectMob","preventSwipe","src","image","alt","options","centerContent","defaultPositionX","count_text","obj","decideImgRender","Clipboard","className","labeledSize","intent","onClick","onQuitClick","small","icon","iconSize","id","data-clipboard-target","data-clipboard-text","location","href","alert","displayProg","value","progWidth","animate","type","disabled","undoHappened","onBackClick","React","Component","TutorialHelper","images","earthrise","moon","flag","index","arrows","rightarrow","leftarrow","downarrow","captions","onTutorialSwipe","TutorialScreen","onTutorialKeyPress","onTutorialAcceptClick","onTutorialRejectClick","onTutorialSkipClick","prevLabel","tutorialIndex","tutorialImages","tutorialMessages","title","caption","decideRender","length","end","style","marginTop","message","EndScreen","decideContinue","open","close","fetch","method","headers","body","JSON","stringify","ready_to_end","decodeURIComponent","split","forEach","item","trim","startsWith","continue","text","reload","sendShutDown","display","backgroundColor","fontSize","warning","decideWarning","backgroundImage","astronaut","getSwipeTime","sendClose","App","view","total_batch_size","imgUrls","undoUrls","swipes","noOfSwipes","batchStop","leftBehind","fetchImage","sendSelection","endTutorial","setLoading","getBatchSize","decideProgWidth","performance","navigation","image_url","sessionStorage","getItem","curr_image_url","axios","post","then","res","catch","err","x","parseInt","getTotalBatchSize","setItem","get","data","batch_stop","labeled_size","url","pop","push","s","msg","toContinue","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0e28d20a.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function Timer(props) {\r\n  const [time, setTime] = useState(1);\r\n  setTimeout(() => setTime(time + 1), 1000);\r\n\r\n  useEffect(() => {\r\n    return function ending() {\r\n      document.cookie = \"swipeTime=\" + time;\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <strong>{time}</strong>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"../styles.css\";\r\nimport TinderCard from \"react-tinder-card\";\r\nimport Timer from \"./timer\";\r\nimport { Button, ProgressBar, Icon } from \"@blueprintjs/core\";\r\nimport \"normalize.css\";\r\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\r\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\r\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\r\nimport Clipboard from \"clipboard\";\r\n\r\nclass SwipeScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      batchTotal: this.props.batch_size,\r\n      // progWidth: this.props.progWidth,\r\n    };\r\n\r\n    //bind functions\r\n    this.decideCountText = this.decideCountText.bind(this);\r\n    this.onSwipe = this.onSwipe.bind(this);\r\n    this.onKeyPress = this.onKeyPress.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    document.addEventListener(\"keyup\", this.onKeyPress, false);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Removes the key press event listener if this component is replaced by another component or view.\r\n    // (Currently there are no other components to replace this view, however.)\r\n    document.removeEventListener(\"keyup\", this.onKeyPress);\r\n  }\r\n\r\n  onSwipe = (direction) => {\r\n    // From TinderCard\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    if (direction === \"right\") {\r\n      this.props.onAcceptClick();\r\n    } else if (direction === \"left\") {\r\n      this.props.onRejectClick();\r\n    } else if (direction === \"down\") {\r\n      this.props.onSkipClick();\r\n    }\r\n  };\r\n\r\n  onKeyPress = (event) => {\r\n    // Key press alternatives\r\n    if (event.key === \"ArrowRight\") {\r\n      this.props.onAcceptClick();\r\n    } else if (event.key === \"ArrowLeft\") {\r\n      this.props.onRejectClick();\r\n    } else if (event.key === \"ArrowDown\") {\r\n      this.props.onSkipClick();\r\n    }\r\n  };\r\n\r\n  decideCountText() {\r\n    //Helper function to render progress of correct width on the progress bar\r\n\r\n    let text = \"\";\r\n\r\n    let y;\r\n\r\n    y = this.props.imagesLeft;\r\n\r\n    if (this.props.imagesLeft > this.props.batch_size) {\r\n      console.log(\"the condition reached!\");\r\n      y = this.props.batch_size;\r\n    }\r\n    if (y == 0) {\r\n      text = \"Last Image!\";\r\n      return text;\r\n    }\r\n    if (y !== 1) text = y + \" images left in batch !\";\r\n    else text = y + \" image left in batch!\";\r\n\r\n    return text;\r\n  }\r\n\r\n  detectTouch() {\r\n    return (\r\n      \"ontouchstart\" in window ||\r\n      navigator.maxTouchPoints > 0 ||\r\n      navigator.msMaxTouchPoints > 0\r\n    );\r\n  }\r\n\r\n  detectMob() {\r\n    // helper function to check type of device(mobile/desktop)\r\n    const toMatch = [\r\n      /Android/i,\r\n      /webOS/i,\r\n      /iPhone/i,\r\n      /iPad/i,\r\n      /iPod/i,\r\n      /BlackBerry/i,\r\n      /Windows Phone/i,\r\n    ];\r\n\r\n    return toMatch.some((toMatchItem) => {\r\n      return navigator.userAgent.match(toMatchItem);\r\n    });\r\n  }\r\n\r\n  decideImgRender() {\r\n    let obj;\r\n    if (!this.detectTouch()) {\r\n      console.log(\"Not touch!\");\r\n    } else console.log(\"touch\");\r\n    if (this.detectMob()) {\r\n      obj = (\r\n        <TinderCard\r\n          onSwipe={this.onSwipe}\r\n          preventSwipe={[\"right\", \"left\", \"down\", \"up\"]}\r\n        >\r\n          <img src={this.props.image} alt=\"\" />\r\n        </TinderCard>\r\n      );\r\n    } else if (this.detectTouch()) {\r\n      obj = (\r\n        <TinderCard\r\n          onSwipe={this.onSwipe}\r\n          preventSwipe={[\"right\", \"left\", \"down\", \"up\"]}\r\n        >\r\n          <img src={this.props.image} alt=\"\" />\r\n        </TinderCard>\r\n      );\r\n    } else {\r\n      obj = (\r\n        <TinderCard\r\n          onSwipe={this.onSwipe}\r\n          preventSwipe={[\"right\", \"left\", \"down\", \"up\"]}\r\n        >\r\n          <TransformWrapper\r\n            options={{ centerContent: true }}\r\n            defaultPositionX={50}\r\n          >\r\n            <TransformComponent>\r\n              <img src={this.props.image} alt=\"\" />\r\n            </TransformComponent>\r\n          </TransformWrapper>\r\n        </TinderCard>\r\n      );\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  render() {\r\n    let count_text = this.decideCountText();\r\n    // console.log(\"x1= \", x);\r\n    let obj = this.decideImgRender();\r\n    var clipboard = new Clipboard(\".clipboard\");\r\n    return (\r\n      <>\r\n        {console.log(\"swipscreen props= \", this.props)}\r\n        <div className=\"header\">\r\n          <div className=\"count\">\r\n            <div className=\"timer\">\r\n              <Timer />\r\n            </div>\r\n            <div className=\"ct-grp\">\r\n              <span>\r\n                {this.props.labeledSize} out of{\" \"}\r\n                {this.props.batch_size + this.props.labeledSize + 1} images\r\n                labelled\r\n              </span>\r\n              <br></br>\r\n              <span>{count_text}</span>\r\n              {/* {console.log(\"x1= \", x)} */}\r\n              <br></br>\r\n            </div>\r\n            <div className=\"button-grp\">\r\n              <Button\r\n                className=\"quit-button\"\r\n                intent=\"danger\"\r\n                onClick={this.props.onQuitClick}\r\n                small={true}\r\n              >\r\n                <Icon icon=\"cross\" iconSize={20} intent=\"danger\" />{\" \"}\r\n              </Button>\r\n              <Button\r\n                id=\"share-button\"\r\n                className=\"clipboard\"\r\n                data-clipboard-target=\"#blank\"\r\n                data-clipboard-text={window.location.href}\r\n                intent=\"primary\"\r\n                small={true}\r\n                onClick={() => alert(\"Link copied to clipboard!\")}\r\n              >\r\n                <Icon icon=\"share\" iconSize={20} />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div id=\"#SwipeScreen\" className=\"Content\">\r\n          <div className=\"Image_wrapper\">\r\n            <div className={this.props.displayProg}>\r\n              <ProgressBar\r\n                intent=\"success\"\r\n                value={this.props.progWidth}\r\n                // value={0.6}\r\n                animate={false}\r\n              ></ProgressBar>\r\n            </div>\r\n            {obj}\r\n          </div>\r\n          <div className=\"footer\">\r\n            <input type=\"text\" id=\"blank\" value={window.location.href} />\r\n            <Button\r\n              icon=\"remove\"\r\n              className=\"AcceptRejectButton\"\r\n              intent=\"primary\"\r\n              onClick={this.props.onSkipClick}\r\n            >\r\n              Skip\r\n            </Button>\r\n            <Button\r\n              icon=\"tick\"\r\n              className=\"AcceptRejectButton\"\r\n              intent=\"success\"\r\n              onClick={() => {\r\n                // this.decideCountText();\r\n                this.props.onAcceptClick();\r\n              }}\r\n            >\r\n              Accept\r\n            </Button>\r\n            <Button\r\n              icon=\"small-cross\"\r\n              className=\"AcceptRejectButton\"\r\n              intent=\"danger\"\r\n              onClick={this.props.onRejectClick}\r\n            >\r\n              Reject\r\n            </Button>\r\n            <Button\r\n              icon=\"undo\"\r\n              disabled={this.props.undoHappened}\r\n              // className=\"BackButton\"\r\n              className=\"AcceptRejectButton\"\r\n              onClick={this.props.onBackClick}\r\n            >\r\n              Undo\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport { SwipeScreen };\r\n","export default __webpack_public_path__ + \"static/media/moon.8ddbc237.jpg\";","export default __webpack_public_path__ + \"static/media/flag.d9b1a692.jpg\";","export default __webpack_public_path__ + \"static/media/earthrise.38b5ac31.jpg\";","export default __webpack_public_path__ + \"static/media/arrowright.51a39359.gif\";","export default __webpack_public_path__ + \"static/media/arrowleft.26090565.gif\";","export default __webpack_public_path__ + \"static/media/arrowdown.e0f48ec1.gif\";","import React from \"react\";\r\nimport \"../styles.css\";\r\nimport moon from \"../tutorial-images/moon.jpg\";\r\nimport flag from \"../tutorial-images/flag.jpg\";\r\nimport earthrise from \"../tutorial-images/earthrise.jpg\";\r\nimport rightarrow from \"../tutorial-images/arrowright.gif\";\r\nimport leftarrow from \"../tutorial-images/arrowleft.gif\";\r\nimport downarrow from \"../tutorial-images/arrowdown.gif\";\r\nimport TinderCard from \"react-tinder-card\";\r\nimport \"normalize.css\";\r\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\r\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\r\n\r\nclass TutorialHelper extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let awesome = \"https://media.giphy.com/media/l2Sqir5ZxfoS27EvS/giphy.gif\";\r\n    this.state = {\r\n      images: [earthrise, moon, flag],\r\n      index: 0,\r\n      arrows: [rightarrow, leftarrow, downarrow, awesome],\r\n      captions: [\r\n        \"Drag in this direction to swipe right! (Accept)\",\r\n        \"Drag in this direction to swipe left! (Reject)\",\r\n        \"Drag in this direction to swipe down! (Skip)\",\r\n        \"We're done here!\",\r\n      ],\r\n    };\r\n    //bind functions\r\n    this.onTutorialSwipe = this.onTutorialSwipe.bind(this);\r\n  }\r\n\r\n  onTutorialSwipe() {\r\n    console.log(\"reached onswipe!!\");\r\n    this.setState({\r\n      index: this.state.index + 1,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"Tutorial_Image_wrapper\">\r\n          <div className=\"tut-helper-text\">\r\n            <div>{this.state.captions[this.state.index]}</div>\r\n            <img\r\n              className=\"tut-helper-gifs\"\r\n              src={this.state.arrows[this.state.index]}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <TinderCard\r\n            onSwipe={this.onTutorialSwipe}\r\n            preventSwipe={[\"right\", \"left\", \"down\"]}\r\n          >\r\n            <img\r\n              className={\"Question_Image\"}\r\n              src={this.state.images[this.state.index]}\r\n              alt=\"\"\r\n            />\r\n          </TinderCard>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport { TutorialHelper };\r\n","import React from \"react\";\r\nimport \"../styles.css\";\r\nimport moon from \"../tutorial-images/moon.jpg\";\r\nimport flag from \"../tutorial-images/flag.jpg\";\r\nimport earthrise from \"../tutorial-images/earthrise.jpg\";\r\nimport TinderCard from \"react-tinder-card\";\r\nimport { Button } from \"@blueprintjs/core\";\r\nimport \"normalize.css\";\r\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\r\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\r\nimport { TutorialHelper } from \"./tutorialhelper\";\r\n\r\nclass TutorialScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      prevLabel: null,\r\n      tutorialIndex: 0,\r\n      tutorialImages: [moon, earthrise, flag],\r\n      tutorialMessages: [\r\n        {\r\n          title: \"Welcome to the Swipe Labeler tool.\",\r\n          caption:\r\n            'You can label images in three ways. First try clicking \"Accept\", \"Reject\" or \"Skip\".',\r\n        },\r\n        {\r\n          title: \"You can also label images by swiping !\",\r\n        },\r\n        {\r\n          title: \"Now try a keyboard shortcut!\",\r\n          caption:\r\n            \"Press your arrow left key,arrow right key, or your arrow down key on your keybord.\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.onTutorialAcceptClick = this.onTutorialAcceptClick.bind(this);\r\n    this.onTutorialRejectClick = this.onTutorialRejectClick.bind(this);\r\n    this.onTutorialSkipClick = this.onTutorialSkipClick.bind(this);\r\n    this.onTutorialSwipe = this.onTutorialSwipe.bind(this);\r\n    this.onTutorialKeyPress = this.onTutorialKeyPress.bind(this);\r\n    this.decideRender = this.decideRender.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    // Listens for the keyboard key press events. (Uses \"keyup\" so the button is only pressed once per choice.)\r\n    document.addEventListener(\"keyup\", this.onTutorialKeyPress, false);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Removes the key press event listener if this component is replaced by another component or view.\r\n    // (Currently there are no other components to replace this view, however.)\r\n    document.removeEventListener(\"keyup\", this.onTutorialKeyPress);\r\n  }\r\n\r\n  onTutorialAcceptClick() {\r\n    // This and onTutorialRejectClick could be one just one function: onTutorialClick.\r\n    // Kept as separate function in case later want to add interaction based on user's choice.\r\n    if (this.state.tutorialIndex === this.state.tutorialImages.length - 1) {\r\n      this.props.end();\r\n    }\r\n    this.setState({\r\n      prevLabel: \"accept\",\r\n      tutorialIndex: this.state.tutorialIndex + 1,\r\n    });\r\n  }\r\n\r\n  onTutorialSkipClick() {\r\n    // This and onTutorialAcceptClick could be one just one function: onTutorialClick.\r\n    // Kept as separate function in case later want to add interaction based on user's choice.\r\n    if (this.state.tutorialIndex === this.state.tutorialImages.length - 1) {\r\n      this.props.end();\r\n    }\r\n    this.setState({\r\n      prevLabel: \"skip\",\r\n      tutorialIndex: this.state.tutorialIndex + 1,\r\n    });\r\n  }\r\n\r\n  onTutorialRejectClick() {\r\n    // This and onTutorialAcceptClick could be one just one function: onTutorialClick.\r\n    // Kept as separate function in case later want to add interaction based on user's choice.\r\n    if (this.state.tutorialIndex === this.state.tutorialImages.length - 1) {\r\n      this.props.end();\r\n    }\r\n    this.setState({\r\n      prevLabel: \"reject\",\r\n      tutorialIndex: this.state.tutorialIndex + 1,\r\n    });\r\n  }\r\n\r\n  onTutorialSwipe(direction) {\r\n    // From TinderCard\r\n    if (direction === \"right\") {\r\n      this.onTutorialAcceptClick();\r\n    } else if (direction === \"left\") {\r\n      this.onTutorialRejectClick();\r\n    } else if (direction === \"down\") {\r\n      this.onTutorialSkipClick();\r\n    }\r\n  }\r\n\r\n  onTutorialKeyPress = (event) => {\r\n    // Key press alternatives\r\n    if (event.key === \"ArrowRight\") {\r\n      this.onTutorialAcceptClick();\r\n    } else if (event.key === \"ArrowLeft\") {\r\n      this.onTutorialRejectClick();\r\n    } else if (event.key === \"ArrowDown\") {\r\n      this.onTutorialSkipClick();\r\n    }\r\n  };\r\n\r\n  decideRender() {\r\n    let obj;\r\n    if (this.state.tutorialIndex === 0 || this.state.tutorialIndex === 2) {\r\n      console.log(\"reached!\");\r\n      obj = (\r\n        <div className=\"Tutorial_Image_wrapper\">\r\n          <TinderCard\r\n            onSwipe={this.onTutorialSwipe}\r\n            preventSwipe={[\"right\", \"left\", \"down\"]}\r\n          >\r\n            <img\r\n              className={\"Question_Image\"}\r\n              src={this.state.tutorialImages[this.state.tutorialIndex]}\r\n              alt=\"\"\r\n            />\r\n          </TinderCard>\r\n          <Button\r\n            icon=\"small-cross\"\r\n            className=\"AcceptRejectButton\"\r\n            intent=\"primary\"\r\n            onClick={this.onTutorialRejectClick}\r\n          >\r\n            Reject\r\n          </Button>\r\n\r\n          <Button\r\n            icon=\"remove\"\r\n            className=\"AcceptRejectButton\"\r\n            intent=\"danger\"\r\n            onClick={this.onTutorialSkipClick}\r\n          >\r\n            Skip\r\n          </Button>\r\n\r\n          <Button\r\n            icon=\"tick\"\r\n            className=\"AcceptRejectButton\"\r\n            intent=\"success\"\r\n            onClick={this.onTutorialAcceptClick}\r\n          >\r\n            Accept\r\n          </Button>\r\n        </div>\r\n      );\r\n    } else\r\n      obj = (\r\n        <div>\r\n          <TutorialHelper />\r\n          <Button\r\n            style={{ marginTop: \"15px\" }}\r\n            intent=\"success\"\r\n            onClick={this.onTutorialAcceptClick}\r\n          >\r\n            Next Section\r\n          </Button>\r\n        </div>\r\n      );\r\n    return obj;\r\n  }\r\n  render() {\r\n    var message = this.state.tutorialMessages[this.state.tutorialIndex];\r\n    let obj = this.decideRender();\r\n    return (\r\n      <div className=\"TutorialScreen\">\r\n        <div className=\"Question\">\r\n          <div className=\"TutorialScreen_Question_Image_Text\">\r\n            <div className=\"TutorialScreen_Question_Image_Text_Title\">\r\n              {message.title}\r\n            </div>\r\n            <div className=\"TutorialScreen_Question_Image_Text_Caption\">\r\n              {message.caption}\r\n            </div>\r\n          </div>\r\n          {obj}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { TutorialScreen };\r\n","export default __webpack_public_path__ + \"static/media/astronaut.0005e707.jpg\";","import React from \"react\";\r\nimport \"../styles.css\";\r\nimport astronaut from \"../tutorial-images/astronaut.jpg\";\r\nimport { Button } from \"@blueprintjs/core\";\r\nimport Confetti from \"react-confetti\";\r\nimport \"normalize.css\";\r\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\r\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\r\n\r\nclass EndScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    //bind functions\r\n    this.decideContinue = this.decideContinue.bind(this);\r\n  }\r\n  // componentDidMount() {\r\n  //   console.log(\"helo mounter!\");\r\n  //   var customWindow = window.open(\"\", \"_parent\", \"\");\r\n  // }\r\n  sendClose() {\r\n    console.log(\"sendClose!!!!@!!!\");\r\n    // var customWindow = window.open(\"\", \"_blank\", \"\");\r\n    // var customWindow = window.open(\"\", \"_self\", \"\");\r\n    // var customWindow = window.open(\"\", \"_parent\", \"\");\r\n    window.open(\"\", \"_parent\", \"\");\r\n    window.close();\r\n    // customWindow.close();\r\n  }\r\n\r\n  sendShutDown() {\r\n    // When the user clicks end,\r\n    // that choice gets sent to flask.\r\n    fetch(\"/end\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        ready_to_end: \"ready\",\r\n      }),\r\n    });\r\n  }\r\n\r\n  detectTouch() {\r\n    return (\r\n      \"ontouchstart\" in window ||\r\n      navigator.maxTouchPoints > 0 ||\r\n      navigator.msMaxTouchPoints > 0\r\n    );\r\n  }\r\n\r\n  getSwipeTime() {\r\n    let time;\r\n    let decoded = decodeURIComponent(document.cookie);\r\n    decoded.split(\";\").forEach((item) => {\r\n      if (item.trim().startsWith(\"swipeTime\")) time = item.trim().split(\"=\")[1];\r\n    });\r\n\r\n    return time;\r\n  }\r\n\r\n  decideContinue() {\r\n    let obj;\r\n    if (this.props.continue)\r\n      obj = (\r\n        <Button\r\n          icon=\"label\"\r\n          id=\"end-btn\"\r\n          className=\"EndScreenButton\"\r\n          intent=\"primary\"\r\n          text={true}\r\n          onClick={() => window.location.reload()}\r\n        >\r\n          Continue Labelling\r\n        </Button>\r\n      );\r\n    else obj = null;\r\n    return obj;\r\n  }\r\n\r\n  decideWarning() {\r\n    let warning;\r\n    if (this.detectTouch())\r\n      warning = (\r\n        <>\r\n          <div className=\"end-btn1\">\r\n            <Button\r\n              id=\"end-btn\"\r\n              icon=\"stop\"\r\n              className=\"EndScreenButton\"\r\n              intent=\"danger\"\r\n              onClick={this.sendShutDown}\r\n            >\r\n              Shut down App\r\n            </Button>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"block\",\r\n              backgroundColor: \"antiquewhite\",\r\n              fontSize: \"1rem\",\r\n            }}\r\n          >\r\n            {\" \"}\r\n            Warning: If other people are using the App, ShutDown ends it for\r\n            them too!\r\n          </div>\r\n        </>\r\n      );\r\n    else\r\n      warning = (\r\n        <>\r\n          <div className=\"end-btn1\">\r\n            <Button\r\n              id=\"end-btn\"\r\n              icon=\"stop\"\r\n              className=\"EndScreenButton\"\r\n              intent=\"danger\"\r\n              onClick={this.sendShutDown}\r\n            >\r\n              Shut down App\r\n            </Button>\r\n          </div>\r\n          <div className=\"hover-text\">\r\n            Warning: If other people are using the App, this ends it for them\r\n            too!\r\n          </div>\r\n        </>\r\n      );\r\n    return warning;\r\n  }\r\n  render() {\r\n    let obj = this.decideContinue();\r\n    let warning = this.decideWarning();\r\n    return (\r\n      <>\r\n        <Confetti />\r\n        <div\r\n          className=\"EndScreen\"\r\n          style={{\r\n            backgroundImage: \"url('\" + astronaut + \"')\",\r\n          }}\r\n        >\r\n          <div className=\"EndScreen_Text\">Mission accomplished! Good job!</div>\r\n          <div className=\"EndScreen_Time_Text\">\r\n            Your labelling time: {this.getSwipeTime()} seconds...\r\n          </div>\r\n          <div className=\"endscreen-btn-grp\">\r\n            {obj}\r\n\r\n            <Button\r\n              id=\"end-btn\"\r\n              icon=\"small-cross\"\r\n              className=\"EndScreenButton\"\r\n              intent=\"success\"\r\n              onClick={this.sendClose}\r\n            >\r\n              Close App\r\n            </Button>\r\n            {warning}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport { EndScreen };\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport { Button } from \"@blueprintjs/core\";\r\nimport { SwipeScreen } from \"./components/swipescreen\";\r\nimport { TutorialScreen } from \"./components/tutorialscreen\";\r\nimport { EndScreen } from \"./components/endscreen\";\r\nimport \"normalize.css\";\r\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\r\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\r\nimport axios from \"axios\";\r\n\r\nfunction hasSeenTutorial() {\r\n  // Checks for a cookie on the users computer that will tell the user has already done the tutorial.\r\n  return document.cookie\r\n    .split(\";\")\r\n    .some((item) => item.trim().startsWith(\"hasSeenTutorial=\"));\r\n}\r\n\r\nfunction setTutorialSeen() {\r\n  document.cookie = \"hasSeenTutorial=true\";\r\n}\r\n\r\nexport default class App extends React.Component {\r\n  // Main component\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      view: hasSeenTutorial() ? \"active\" : \"tutorial\",\r\n      index: 0,\r\n      image: null,\r\n      total_batch_size: null,\r\n      batch_size: null,\r\n      imgUrls: [],\r\n      undoUrls: [],\r\n      undoHappened: true,\r\n      swipes: 0,\r\n      noOfSwipes: 0,\r\n      batchStop: 0,\r\n      leftBehind: 0,\r\n      labeledSize: 0,\r\n      progWidth: 0,\r\n      displayProg: \"prog-bar\",\r\n    };\r\n\r\n    // bind functions\r\n    this.fetchImage = this.fetchImage.bind(this);\r\n    this.sendSelection = this.sendSelection.bind(this);\r\n    this.onAcceptClick = this.onAcceptClick.bind(this);\r\n    this.onRejectClick = this.onRejectClick.bind(this);\r\n    this.onSkipClick = this.onSkipClick.bind(this);\r\n    this.onBackClick = this.onBackClick.bind(this);\r\n    this.onQuitClick = this.onQuitClick.bind(this);\r\n    this.endTutorial = this.endTutorial.bind(this);\r\n    this.setLoading = this.setLoading.bind(this);\r\n    this.getBatchSize = this.getBatchSize.bind(this);\r\n    this.decideProgWidth = this.decideProgWidth.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // When the app loads,get the batch size and 1 image url from flask.\r\n\r\n    //refresh handler - to copy the images back to unlabeled incase user hits refresh\r\n    if (window.performance) {\r\n      if (performance.navigation.type === 1) {\r\n        //Send the current image to unlabeled\r\n        // If undo stack has a url, send that as well to unlabeled\r\n        let image_url = sessionStorage.getItem(\"url\");\r\n        let curr_image_url = sessionStorage.getItem(\"undo-url\");\r\n        if (curr_image_url === image_url) {\r\n          curr_image_url = \"none\";\r\n        }\r\n        console.log(\"Image url: \", image_url);\r\n        console.log(\"Curr_Image url: \", curr_image_url);\r\n\r\n        axios\r\n          .post(\"/refresh\", {\r\n            image_url: image_url,\r\n            curr_image_url: curr_image_url,\r\n          })\r\n          .then((res) => {\r\n            console.log(res);\r\n          })\r\n          .catch((err) => console.log(\"ERROR: \", err));\r\n      }\r\n    }\r\n\r\n    let x = parseInt(sessionStorage.getItem(\"noOfSwipes\"));\r\n    if (!x) x = 0;\r\n    this.setState({\r\n      noOfSwipes: x,\r\n    });\r\n\r\n    this.getTotalBatchSize();\r\n    this.fetchImage();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.view === \"end\") {\r\n      //change session storage before moving to endscreen\r\n      console.log(\"reached end\");\r\n      sessionStorage.setItem(`noOfSwipes`, 0);\r\n    } else {\r\n      // load the current image onto session storage, to be moved later incase user hits refresh\r\n      sessionStorage.setItem(`undo-url`, this.state.curr_image_url);\r\n      sessionStorage.setItem(`url`, this.state.image);\r\n      sessionStorage.setItem(`noOfSwipes`, this.state.noOfSwipes);\r\n    }\r\n  }\r\n\r\n  getTotalBatchSize() {\r\n    axios\r\n      .get(\"/getsize\")\r\n      .then((res) => {\r\n        console.log(\"response = \", res.data.batch_size);\r\n        this.setState(\r\n          {\r\n            total_batch_size: res.data.batch_size,\r\n            batchStop: res.data.batch_stop,\r\n            imagesLeft: res.data.batch_stop - 1,\r\n          },\r\n          () => {\r\n            console.log(\"got total batch state as: \", this.state.batch_size);\r\n          }\r\n        );\r\n      })\r\n      .catch((err) => console.log(\"ERROR: \", err));\r\n  }\r\n\r\n  getBatchSize() {\r\n    axios\r\n      .get(\"/getsize\")\r\n      .then((res) => {\r\n        console.log(\"response = \", res.data.batch_size);\r\n        this.setState(\r\n          {\r\n            batch_size: res.data.batch_size,\r\n            labeledSize: res.data.labeled_size,\r\n          },\r\n          () => {\r\n            console.log(\"got total batch state as: \", this.state.batch_size);\r\n          }\r\n        );\r\n      })\r\n      .catch((err) => console.log(\"ERROR: \", err));\r\n  }\r\n\r\n  fetchImage() {\r\n    // Collect one image url from flask\r\n    let url;\r\n    if (this.state.leftBehind !== 0) {\r\n      url = this.state.undoUrls.pop();\r\n      this.setState({\r\n        leftBehind: this.state.leftBehind - 1,\r\n      });\r\n    } else url = \"none\";\r\n    axios\r\n      .post(\"/image\", {\r\n        swipes: this.state.swipes + 1,\r\n        image_url: url || \"none\",\r\n      })\r\n      .then((res) => {\r\n        if (res.data.image === \"none\")\r\n          this.setState({\r\n            view: \"end\",\r\n          });\r\n        else {\r\n          let x = this.state.imgUrls;\r\n          //check if res.data.image is in x before pushing to x\r\n          x.push(res.data.image);\r\n          let url = this.state.imgUrls[this.state.index]\r\n            ? this.state.imgUrls[this.state.index]\r\n            : \"none\";\r\n          let s = this.state.noOfSwipes + this.state.leftBehind;\r\n          this.setState(\r\n            {\r\n              image: res.data.image,\r\n              imgUrls: x,\r\n              curr_image_url: url,\r\n              swipes: s,\r\n            },\r\n            () => {\r\n              console.log(\"img \", typeof this.state.image);\r\n              this.getBatchSize();\r\n            }\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => console.log(\"ERROR: \", err));\r\n  }\r\n\r\n  setLoading(s) {\r\n    console.log(\"reached \");\r\n    this.setState({\r\n      loading: s,\r\n    });\r\n  }\r\n\r\n  sendSelection(value) {\r\n    // When the user swipes, clicks, or presses a choice (accept or reject),\r\n    // that choice gets sent to flask.\r\n    fetch(\"/submit\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        image_url: this.state.image,\r\n        value: value,\r\n      }),\r\n    });\r\n  }\r\n\r\n  decideProgWidth() {\r\n    if (this.state.batchStop > this.state.total_batch_size) {\r\n      console.log(\"reached block\");\r\n      this.setState({\r\n        displayProg: \"prog-bar\",\r\n        msg: \"reached!\",\r\n      });\r\n      this.setState(\r\n        {\r\n          progWidth: this.state.noOfSwipes / (this.state.batch_size + 1),\r\n          msg: \" reach\",\r\n        },\r\n        () => {\r\n          console.log(this.state.msg);\r\n        }\r\n      );\r\n    } else {\r\n      let x = this.state.batchStop;\r\n      this.setState(\r\n        {\r\n          progWidth: this.state.noOfSwipes / this.state.batchStop,\r\n          msg: \"didnt reach\",\r\n        },\r\n        () => {\r\n          console.log(this.state.msg);\r\n        }\r\n      );\r\n    }\r\n  }\r\n  onAcceptClick() {\r\n    // Send the positive label to flask, make call to /image to get the next image from flask\r\n    // and update the index so the next image will show.\r\n    this.setState(\r\n      {\r\n        index: this.state.index + 1,\r\n        noOfSwipes: this.state.noOfSwipes + 1,\r\n        swipes: this.state.noOfSwipes + this.state.leftBehind,\r\n        undoHappened: false,\r\n        imagesLeft: this.state.imagesLeft - 1,\r\n      },\r\n      () => {\r\n        this.sendSelection(1);\r\n        this.decideProgWidth();\r\n        if (this.state.noOfSwipes === this.state.batchStop)\r\n          this.setState({\r\n            view: \"end\",\r\n          });\r\n        else this.fetchImage();\r\n      }\r\n    );\r\n  }\r\n\r\n  onSkipClick() {\r\n    // Send no label to flask, mark as ambigous with constant value 10\r\n    // and update the index so the next image will show.\r\n    this.setState(\r\n      {\r\n        index: this.state.index + 1,\r\n        noOfSwipes: this.state.noOfSwipes + 1,\r\n        swipes: this.state.noOfSwipes + this.state.leftBehind,\r\n        undoHappened: false,\r\n        imagesLeft: this.state.imagesLeft - 1,\r\n      },\r\n      () => {\r\n        this.sendSelection(2);\r\n        this.decideProgWidth();\r\n        if (this.state.noOfSwipes === this.state.batchStop)\r\n          this.setState({\r\n            view: \"end\",\r\n          });\r\n        else this.fetchImage();\r\n      }\r\n    );\r\n  }\r\n\r\n  onRejectClick() {\r\n    // Send the negative label to flask,\r\n    // and update the index so the next image will show.\r\n    this.setState(\r\n      {\r\n        index: this.state.index + 1,\r\n        noOfSwipes: this.state.noOfSwipes + 1,\r\n        swipes: this.state.noOfSwipes + this.state.leftBehind,\r\n        undoHappened: false,\r\n        imagesLeft: this.state.imagesLeft - 1,\r\n      },\r\n      () => {\r\n        this.sendSelection(0);\r\n        this.decideProgWidth();\r\n        if (this.state.noOfSwipes === this.state.batchStop)\r\n          this.setState({\r\n            view: \"end\",\r\n          });\r\n        else this.fetchImage();\r\n      }\r\n    );\r\n  }\r\n\r\n  onBackClick() {\r\n    // add the image which is going to be undone to url stack and request the same image from flask\r\n    let x = this.state.imgUrls;\r\n    let y = this.state.undoUrls;\r\n    x.push(this.state.imgUrls[this.state.index - 1]);\r\n    y.push(this.state.imgUrls[this.state.index]);\r\n    axios\r\n      .post(\"/undo\", {\r\n        image_url: this.state.imgUrls[this.state.index - 1],\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.setState(\r\n          {\r\n            index: this.state.index + 1,\r\n            image: this.state.imgUrls[this.state.index - 1],\r\n            imgUrls: x,\r\n            undoUrls: y,\r\n            noOfSwipes: this.state.noOfSwipes - 1,\r\n            leftBehind: this.state.leftBehind + 1,\r\n            undoHappened: true,\r\n            imagesLeft: this.state.imagesLeft + 1,\r\n          },\r\n          () => {\r\n            this.decideProgWidth();\r\n          }\r\n        );\r\n      })\r\n      .catch((err) => console.log(\"ERROR: \", err));\r\n  }\r\n\r\n  onQuitClick() {\r\n    //Send the current image to unlabeled\r\n    // If undo stack has a url, send that as well to unlabeled\r\n    let image_url, curr_image_url;\r\n    if (this.state.undoHappened && this.state.index) {\r\n      image_url = this.state.image;\r\n      curr_image_url = this.state.undoUrls[0];\r\n    } else {\r\n      image_url = this.state.curr_image_url;\r\n      curr_image_url = \"none\";\r\n    }\r\n\r\n    axios\r\n      .post(\"/quit\", {\r\n        image_url: image_url,\r\n        curr_image_url: curr_image_url,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.setState({\r\n          view: \"end\",\r\n        });\r\n      })\r\n      .catch((err) => console.log(\"ERROR: \", err));\r\n  }\r\n\r\n  endTutorial() {\r\n    this.setState({\r\n      view: \"active\",\r\n    });\r\n    // Set a cookie on the user's browser so they don't see the tutorial again.\r\n    setTutorialSeen();\r\n  }\r\n\r\n  render() {\r\n    var body = null;\r\n    {\r\n      console.log(\"Parent state\\n\", this.state.images);\r\n    }\r\n    let toContinue;\r\n    if (this.state.batch_size <= 0) toContinue = false;\r\n    else toContinue = true;\r\n\r\n    let displayProg;\r\n    if (this.state.batchStop > this.state.total_batch_size) {\r\n      console.log(\"reached if block!\");\r\n      displayProg = \"prg-bar\";\r\n      // displayProg = \"prog-bar\";\r\n    } else {\r\n      displayProg = \"prog-bar\";\r\n    }\r\n    if (this.state.view === \"tutorial\")\r\n      body = <TutorialScreen end={this.endTutorial} />;\r\n    else if (this.state.view === \"active\")\r\n      body = this.state.image ? (\r\n        <SwipeScreen\r\n          index={this.state.index}\r\n          undoHappened={this.state.undoHappened}\r\n          total_batch_size={this.state.total_batch_size}\r\n          swipes={this.state.swipes}\r\n          batch_size={this.state.batch_size}\r\n          labeledSize={this.state.labeledSize}\r\n          image={this.state.image}\r\n          onAcceptClick={this.onAcceptClick}\r\n          onRejectClick={this.onRejectClick}\r\n          onSkipClick={this.onSkipClick}\r\n          onBackClick={this.onBackClick}\r\n          onQuitClick={this.onQuitClick}\r\n          time={this.state.time}\r\n          batchStop={this.state.batchStop}\r\n          noOfSwipes={this.state.noOfSwipes}\r\n          imagesLeft={this.state.imagesLeft}\r\n          progWidth={this.state.progWidth}\r\n          displayProg={displayProg}\r\n        />\r\n      ) : (\r\n        <Button loading={true} />\r\n      );\r\n    else if (this.state.view === \"end\") {\r\n      // body = <EndScreen continue={toContinue} />;\r\n      if (this.state.batch_size - 1 <= 0) body = <EndScreen />;\r\n      else body = <EndScreen continue={toContinue} />;\r\n    }\r\n    return <div className=\"App\">{body}</div>;\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import App from './App';\r\nimport App from './runner';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
{"version":3,"sources":["tutorial-images/moon.jpg","tutorial-images/flag.jpg","tutorial-images/earthrise.jpg","tutorial-images/astronaut.jpg","App.js","reportWebVitals.js","index.js"],"names":["App","props","state","view","document","cookie","split","some","item","trim","startsWith","index","images","batch_size","fetchImages","bind","sendSelection","onAcceptClick","onRejectClick","onBackClick","endTutorial","prevProps","prevState","this","fetch","then","res","json","data","setState","length","value","method","headers","body","JSON","stringify","image_url","end","image","loading","className","React","Component","SwipeScreen","onSwipe","direction","onKeyPress","event","key","addEventListener","removeEventListener","disabled","onClick","preventSwipe","src","alt","icon","intent","TutorialScreen","onTutorialKeyPress","onTutorialAcceptClick","onTutorialRejectClick","prevLabel","tutorialIndex","tutorialImages","moon","earthrise","flag","tutorialMessages","title","caption","onTutorialSwipe","message","style","backgroundImage","EndScreen","ready_to_end","astronaut","sendEnd","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"oQAAe,G,OAAA,IAA0B,kCCA1B,MAA0B,iCCA1B,MAA0B,sCCA1B,MAA0B,sC,mDCuBpBA,E,kDAEnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAdGC,SAASC,OACbC,MAAM,KACNC,MAAK,SAACC,GAAD,OAAUA,EAAKC,OAAOC,WAAW,uBAYX,SAAW,WACrCC,MAAO,EACPC,OAAQ,KACRC,WAAY,MAId,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKE,cAAgB,EAAKA,cAAcF,KAAnB,gBACrB,EAAKG,cAAgB,EAAKA,cAAcH,KAAnB,gBACrB,EAAKI,YAAc,EAAKA,YAAYJ,KAAjB,gBACnB,EAAKK,YAAc,EAAKA,YAAYL,KAAjB,gBAfF,E,+DAkBAM,EAAWC,GAG1BA,EAAUX,QAAUY,KAAKrB,MAAMS,OAC/BY,KAAKrB,MAAMS,QAAUY,KAAKrB,MAAMW,YAEhCU,KAAKT,gB,0CAKPS,KAAKT,gB,oCAGQ,IAAD,OAEZU,MAAM,WACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKC,SAAS,CACZjB,OAAQgB,EAAKhB,OACbC,WAAYe,EAAKhB,OAAOkB,OACxBnB,MAAO,IAEJiB,EAAKhB,OAAOkB,QACf,EAAKD,SAAS,CACZ1B,KAAM,a,oCAKF4B,GAGZP,MAAM,UAAW,CACfQ,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBC,UAAWd,KAAKrB,MAAMU,OAAOW,KAAKrB,MAAMS,OACxCoB,MAAOA,Q,sCAQXR,KAAKP,cAAc,GACnBO,KAAKM,SAAS,CACZlB,MAAOY,KAAKrB,MAAMS,MAAQ,M,sCAO5BY,KAAKP,cAAc,GACnBO,KAAKM,SAAS,CACZlB,MAAOY,KAAKrB,MAAMS,MAAQ,M,oCAK5BY,KAAKM,SAAS,CACZlB,MAAOY,KAAKrB,MAAMS,MAAQ,M,oCAK5BY,KAAKM,SAAS,CACZ1B,KAAM,WA7FVC,SAASC,OAAS,yB,+BAoGhB,IAAI6B,EAAO,KAkBX,MAhBwB,aAApBX,KAAKrB,MAAMC,KACb+B,EAAO,cAAC,EAAD,CAAgBI,IAAKf,KAAKH,cACN,WAApBG,KAAKrB,MAAMC,KAClB+B,EAAOX,KAAKrB,MAAMU,OAChB,cAAC,EAAD,CACED,MAAOY,KAAKrB,MAAMS,MAClB4B,MAAOhB,KAAKrB,MAAMU,OAAOW,KAAKrB,MAAMS,OACpCM,cAAeM,KAAKN,cACpBC,cAAeK,KAAKL,cACpBC,YAAaI,KAAKJ,cAGpB,cAAC,IAAD,CAAQqB,SAAS,IAEQ,QAApBjB,KAAKrB,MAAMC,OAAgB+B,EAAO,cAAC,EAAD,KAEpC,qBAAKO,UAAU,MAAf,SAAsBP,Q,GAnHAQ,IAAMC,WAuHjCC,E,kDACJ,WAAY3C,GAAQ,IAAD,8BACjB,cAAMA,IAiBR4C,QAAU,SAACC,GAES,UAAdA,EACF,EAAK7C,MAAMgB,gBACY,SAAd6B,GACT,EAAK7C,MAAMiB,iBAvBI,EA2BnB6B,WAAa,SAACC,GAEM,eAAdA,EAAMC,IACR,EAAKhD,MAAMgB,gBACY,cAAd+B,EAAMC,KACf,EAAKhD,MAAMiB,iBA9Bb,EAAKhB,MAAQ,GAEb,EAAK2C,QAAU,EAAKA,QAAQ9B,KAAb,gBACf,EAAKgC,WAAa,EAAKA,WAAWhC,KAAhB,gBALD,E,iEASjBX,SAAS8C,iBAAiB,QAAS3B,KAAKwB,YAAY,K,6CAMpD3C,SAAS+C,oBAAoB,QAAS5B,KAAKwB,c,+BAsB3C,OACE,qBAAKN,UAAU,cAAf,SACE,sBAAKA,UAAU,WAAf,UACE,cAAC,IAAD,CACEW,SAA+B,IAArB7B,KAAKtB,MAAMU,MACrB8B,UAAU,aACVY,QAAS9B,KAAKtB,MAAMkB,YAHtB,kBAOA,qBAAKsB,UAAU,gBAAf,SACE,cAAC,IAAD,CAAYI,QAAStB,KAAKsB,QAASS,aAAc,CAAC,QAAS,QAA3D,SACE,qBAAKC,IAAKhC,KAAKtB,MAAMsC,MAAOiB,IAAI,SAIpC,cAAC,IAAD,CACEC,KAAK,cACLhB,UAAU,qBACViB,OAAO,UACPL,QAAS9B,KAAKtB,MAAMiB,cAJtB,oBASA,cAAC,IAAD,CACEuC,KAAK,OACLhB,UAAU,qBACViB,OAAO,UACPL,QAAS9B,KAAKtB,MAAMgB,cAJtB,6B,GA/DgByB,IAAMC,WA6E1BgB,E,kDACJ,WAAY1D,GAAQ,IAAD,8BACjB,cAAMA,IAqER2D,mBAAqB,SAACZ,GAEF,eAAdA,EAAMC,IACR,EAAKY,wBACkB,cAAdb,EAAMC,KACf,EAAKa,yBAzEP,EAAK5D,MAAQ,CACX6D,UAAW,KACXC,cAAe,EACfC,eAAgB,CAACC,EAAMC,EAAWC,GAClCC,iBAAkB,CAChB,CACEC,MAAO,qCACPC,QACE,qFAEJ,CAAEA,QAAS,0DACX,CACEA,QACE,sGAKR,EAAKV,sBAAwB,EAAKA,sBAAsB9C,KAA3B,gBAC7B,EAAK+C,sBAAwB,EAAKA,sBAAsB/C,KAA3B,gBAC7B,EAAKyD,gBAAkB,EAAKA,gBAAgBzD,KAArB,gBACvB,EAAK6C,mBAAqB,EAAKA,mBAAmB7C,KAAxB,gBAvBT,E,iEA4BjBX,SAAS8C,iBAAiB,QAAS3B,KAAKqC,oBAAoB,K,6CAM5DxD,SAAS+C,oBAAoB,QAAS5B,KAAKqC,sB,8CAMvCrC,KAAKrB,MAAM8D,gBAAkBzC,KAAKrB,MAAM+D,eAAenC,OAAS,GAClEP,KAAKtB,MAAMqC,MAEbf,KAAKM,SAAS,CACZkC,UAAW,SACXC,cAAezC,KAAKrB,MAAM8D,cAAgB,M,8CAOxCzC,KAAKrB,MAAM8D,gBAAkBzC,KAAKrB,MAAM+D,eAAenC,OAAS,GAClEP,KAAKtB,MAAMqC,MAEbf,KAAKM,SAAS,CACZkC,UAAW,SACXC,cAAezC,KAAKrB,MAAM8D,cAAgB,M,sCAI9BlB,GAEI,UAAdA,EACFvB,KAAKsC,wBACkB,SAAdf,GACTvB,KAAKuC,0B,+BAcP,IAAIW,EAAUlD,KAAKrB,MAAMmE,iBAAiB9C,KAAKrB,MAAM8D,eACrD,OACE,qBAAKvB,UAAU,iBAAf,SACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,cAAC,IAAD,CACEI,QAAStB,KAAKiD,gBACdlB,aAAc,CAAC,QAAS,QAF1B,SAIE,qBACEb,UAAU,gCACViC,MAAO,CACLC,gBACE,QACApD,KAAKrB,MAAM+D,eAAe1C,KAAKrB,MAAM8D,eACrC,MANN,SASE,sBAAKvB,UAAU,qCAAf,UACE,qBAAKA,UAAU,2CAAf,SACGgC,EAAQH,QAEX,qBAAK7B,UAAU,6CAAf,SACGgC,EAAQF,mBAQnB,cAAC,IAAD,CACEd,KAAK,cACLhB,UAAU,qBACViB,OAAO,UACPL,QAAS9B,KAAKuC,sBAJhB,oBASA,cAAC,IAAD,CACEL,KAAK,OACLhB,UAAU,qBACViB,OAAO,UACPL,QAAS9B,KAAKsC,sBAJhB,6B,GAzHmBnB,IAAMC,WAuI7BiC,E,kDACJ,WAAY3E,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,sDAOjBsB,MAAM,OAAQ,CACZQ,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnByC,aAAc,c,+BAMlB,OACE,sBACEpC,UAAU,YACViC,MAAO,CACLC,gBAAiB,QAAUG,EAAY,MAH3C,UAME,qBAAKrC,UAAU,iBAAf,6CACA,cAAC,IAAD,CACEgB,KAAK,OACLhB,UAAU,qBACViB,OAAO,UACPL,QAAS9B,KAAKwD,QAJhB,0B,GA1BgBrC,IAAMC,WCtVfqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBzD,MAAK,YAAkD,IAA/C0D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtF,SAASuF,eAAe,SAM1BX,M","file":"static/js/main.4eafb386.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/moon.8ddbc237.jpg\";","export default __webpack_public_path__ + \"static/media/flag.d9b1a692.jpg\";","export default __webpack_public_path__ + \"static/media/earthrise.38b5ac31.jpg\";","export default __webpack_public_path__ + \"static/media/astronaut.0005e707.jpg\";","import React from \"react\";\nimport \"./styles.css\";\nimport moon from \"./tutorial-images/moon.jpg\";\nimport flag from \"./tutorial-images/flag.jpg\";\nimport earthrise from \"./tutorial-images/earthrise.jpg\";\nimport astronaut from \"./tutorial-images/astronaut.jpg\";\nimport TinderCard from \"react-tinder-card\";\nimport { Button } from \"@blueprintjs/core\";\nimport \"normalize.css\";\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\n\nfunction hasSeenTutorial() {\n  // Checks for a cookie on the users computer that will tell the user has already done the tutorial.\n  return document.cookie\n    .split(\";\")\n    .some((item) => item.trim().startsWith(\"hasSeenTutorial=\"));\n}\n\nfunction setTutorialSeen() {\n  document.cookie = \"hasSeenTutorial=true\";\n}\n\nexport default class App extends React.Component {\n  // Main component\n  constructor(props) {\n    super(props);\n    this.state = {\n      view: hasSeenTutorial() ? \"active\" : \"tutorial\",\n      index: 0,\n      images: null,\n      batch_size: null,\n    };\n\n    // bind functions\n    this.fetchImages = this.fetchImages.bind(this);\n    this.sendSelection = this.sendSelection.bind(this);\n    this.onAcceptClick = this.onAcceptClick.bind(this);\n    this.onRejectClick = this.onRejectClick.bind(this);\n    this.onBackClick = this.onBackClick.bind(this);\n    this.endTutorial = this.endTutorial.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // When the index gets updated, show the next image.\n    if (\n      prevState.index !== this.state.index &&\n      this.state.index === this.state.batch_size\n    )\n      this.fetchImages();\n  }\n\n  componentDidMount() {\n    // When the app loads, get all the image urls from flask.\n    this.fetchImages();\n  }\n\n  fetchImages() {\n    // Collect the list of image urls to request one by one later.\n    fetch(\"/images\")\n      .then((res) => res.json())\n      .then((data) => {\n        this.setState({\n          images: data.images,\n          batch_size: data.images.length,\n          index: 0,\n        });\n        if (!data.images.length)\n          this.setState({\n            view: \"end\",\n          });\n      });\n  }\n\n  sendSelection(value) {\n    // When the user swipes, clicks, or presses a choice (accept or reject),\n    // that choice gets sent to flask.\n    fetch(\"/submit\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        image_url: this.state.images[this.state.index],\n        value: value,\n      }),\n    });\n  }\n\n  onAcceptClick() {\n    // Send the positive label to flask,\n    // and update the index so the next image will show.\n    this.sendSelection(1);\n    this.setState({\n      index: this.state.index + 1,\n    });\n  }\n\n  onRejectClick() {\n    // Send the negative label to flask,\n    // and update the index so the next image will show.\n    this.sendSelection(0);\n    this.setState({\n      index: this.state.index + 1,\n    });\n  }\n\n  onBackClick() {\n    this.setState({\n      index: this.state.index - 1,\n    });\n  }\n\n  endTutorial() {\n    this.setState({\n      view: \"active\",\n    });\n    // Set a cookie on the user's browser so they don't see the tutorial again.\n    setTutorialSeen();\n  }\n\n  render() {\n    var body = null;\n\n    if (this.state.view === \"tutorial\")\n      body = <TutorialScreen end={this.endTutorial} />;\n    else if (this.state.view === \"active\")\n      body = this.state.images ? (\n        <SwipeScreen\n          index={this.state.index}\n          image={this.state.images[this.state.index]}\n          onAcceptClick={this.onAcceptClick}\n          onRejectClick={this.onRejectClick}\n          onBackClick={this.onBackClick}\n        />\n      ) : (\n        <Button loading={true} />\n      );\n    else if (this.state.view === \"end\") body = <EndScreen />;\n\n    return <div className=\"App\">{body}</div>;\n  }\n}\n\nclass SwipeScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    this.onSwipe = this.onSwipe.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n  }\n  componentWillMount() {\n    // Listens for the keyboard key press events. (Uses \"keyup\" so the button is only pressed once per choice.)\n    document.addEventListener(\"keyup\", this.onKeyPress, false);\n  }\n\n  componentWillUnmount() {\n    // Removes the key press event listener if this component is replaced by another component or view.\n    // (Currently there are no other components to replace this view, however.)\n    document.removeEventListener(\"keyup\", this.onKeyPress);\n  }\n\n  onSwipe = (direction) => {\n    // From TinderCard\n    if (direction === \"right\") {\n      this.props.onAcceptClick();\n    } else if (direction === \"left\") {\n      this.props.onRejectClick();\n    }\n  };\n\n  onKeyPress = (event) => {\n    // Key press alternatives\n    if (event.key === \"ArrowRight\") {\n      this.props.onAcceptClick();\n    } else if (event.key === \"ArrowLeft\") {\n      this.props.onRejectClick();\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"SwipeScreen\">\n        <div className=\"Question\">\n          <Button\n            disabled={this.props.index === 0}\n            className=\"BackButton\"\n            onClick={this.props.onBackClick}\n          >\n            Back\n          </Button>\n          <div className=\"Image_wrapper\">\n            <TinderCard onSwipe={this.onSwipe} preventSwipe={[\"right\", \"left\"]}>\n              <img src={this.props.image} alt=\"\" />\n            </TinderCard>\n          </div>\n\n          <Button\n            icon=\"small-cross\"\n            className=\"AcceptRejectButton\"\n            intent=\"primary\"\n            onClick={this.props.onRejectClick}\n          >\n            Reject\n          </Button>\n\n          <Button\n            icon=\"tick\"\n            className=\"AcceptRejectButton\"\n            intent=\"success\"\n            onClick={this.props.onAcceptClick}\n          >\n            Accept\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass TutorialScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      prevLabel: null,\n      tutorialIndex: 0,\n      tutorialImages: [moon, earthrise, flag],\n      tutorialMessages: [\n        {\n          title: \"Welcome to the Swipe Labeler tool.\",\n          caption:\n            'You can label images in three ways. First click \"Accept\" or \"Reject\" to continue.',\n        },\n        { caption: \"Now try swiping the image to the left or to the right.\" },\n        {\n          caption:\n            \"Now try a keyboard shortcut. Press your arrow left key or your arrow right key on your keyboard.\",\n        },\n      ],\n    };\n\n    this.onTutorialAcceptClick = this.onTutorialAcceptClick.bind(this);\n    this.onTutorialRejectClick = this.onTutorialRejectClick.bind(this);\n    this.onTutorialSwipe = this.onTutorialSwipe.bind(this);\n    this.onTutorialKeyPress = this.onTutorialKeyPress.bind(this);\n  }\n\n  componentWillMount() {\n    // Listens for the keyboard key press events. (Uses \"keyup\" so the button is only pressed once per choice.)\n    document.addEventListener(\"keyup\", this.onTutorialKeyPress, false);\n  }\n\n  componentWillUnmount() {\n    // Removes the key press event listener if this component is replaced by another component or view.\n    // (Currently there are no other components to replace this view, however.)\n    document.removeEventListener(\"keyup\", this.onTutorialKeyPress);\n  }\n\n  onTutorialAcceptClick() {\n    // This and onTutorialRejectClick could be one just one function: onTutorialClick.\n    // Kept as separate function in case later want to add interaction based on user's choice.\n    if (this.state.tutorialIndex === this.state.tutorialImages.length - 1) {\n      this.props.end();\n    }\n    this.setState({\n      prevLabel: \"accept\",\n      tutorialIndex: this.state.tutorialIndex + 1,\n    });\n  }\n\n  onTutorialRejectClick() {\n    // This and onTutorialAcceptClick could be one just one function: onTutorialClick.\n    // Kept as separate function in case later want to add interaction based on user's choice.\n    if (this.state.tutorialIndex === this.state.tutorialImages.length - 1) {\n      this.props.end();\n    }\n    this.setState({\n      prevLabel: \"reject\",\n      tutorialIndex: this.state.tutorialIndex + 1,\n    });\n  }\n\n  onTutorialSwipe(direction) {\n    // From TinderCard\n    if (direction === \"right\") {\n      this.onTutorialAcceptClick();\n    } else if (direction === \"left\") {\n      this.onTutorialRejectClick();\n    }\n  }\n\n  onTutorialKeyPress = (event) => {\n    // Key press alternatives\n    if (event.key === \"ArrowRight\") {\n      this.onTutorialAcceptClick();\n    } else if (event.key === \"ArrowLeft\") {\n      this.onTutorialRejectClick();\n    }\n  };\n\n  render() {\n    var message = this.state.tutorialMessages[this.state.tutorialIndex];\n    return (\n      <div className=\"TutorialScreen\">\n        <div className=\"Question\">\n          <div className=\"Image_wrapper\">\n            <TinderCard\n              onSwipe={this.onTutorialSwipe}\n              preventSwipe={[\"right\", \"left\"]}\n            >\n              <div\n                className=\"TutorialScreen_Question_Image\"\n                style={{\n                  backgroundImage:\n                    \"url('\" +\n                    this.state.tutorialImages[this.state.tutorialIndex] +\n                    \"')\",\n                }}\n              >\n                <div className=\"TutorialScreen_Question_Image_Text\">\n                  <div className=\"TutorialScreen_Question_Image_Text_Title\">\n                    {message.title}\n                  </div>\n                  <div className=\"TutorialScreen_Question_Image_Text_Caption\">\n                    {message.caption}\n                  </div>\n                  {/* {this.state.tutorialMessages[this.state.tutorialIndex]} */}\n                </div>\n              </div>\n            </TinderCard>\n          </div>\n\n          <Button\n            icon=\"small-cross\"\n            className=\"AcceptRejectButton\"\n            intent=\"primary\"\n            onClick={this.onTutorialRejectClick}\n          >\n            Reject\n          </Button>\n\n          <Button\n            icon=\"tick\"\n            className=\"AcceptRejectButton\"\n            intent=\"success\"\n            onClick={this.onTutorialAcceptClick}\n          >\n            Accept\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass EndScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  sendEnd() {\n    // When the user clicks end,\n    // that choice gets sent to flask.\n    fetch(\"/end\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        ready_to_end: \"ready\",\n      }),\n    });\n  }\n\n  render() {\n    return (\n      <div\n        className=\"EndScreen\"\n        style={{\n          backgroundImage: \"url('\" + astronaut + \"')\",\n        }}\n      >\n        <div className=\"EndScreen_Text\">Mission accomplished! Good job!</div>\n        <Button\n          icon=\"tick\"\n          className=\"AcceptRejectButton\"\n          intent=\"success\"\n          onClick={this.sendEnd}\n        >\n          Close\n        </Button>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}